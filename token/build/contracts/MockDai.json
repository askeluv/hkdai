{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    }
  ],
  "allSourcePaths": [
    "contracts/MockDai.sol",
    "contracts/SafeMath.sol"
  ],
  "ast": {
    "absolutePath": "contracts/MockDai.sol",
    "exportedSymbols": {
      "MockDai": [
        755
      ]
    },
    "id": 756,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 482,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 483,
        "nodeType": "ImportDirective",
        "scope": 756,
        "sourceUnit": 857,
        "src": "25:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 755,
        "linearizedBaseContracts": [
          755
        ],
        "name": "MockDai",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 486,
            "libraryName": {
              "contractScope": null,
              "id": 484,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 856,
              "src": "81:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$856",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "75:27:1",
            "typeName": {
              "id": 485,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "94:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 488,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "108:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 487,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "108:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 490,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "134:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 489,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "134:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 492,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "158:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 491,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "158:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 494,
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "187:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 493,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "187:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 498,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "220:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 497,
              "keyType": {
                "id": 495,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "228:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "220:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 496,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "239:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 504,
            "name": "allowed",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "262:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 503,
              "keyType": {
                "id": 499,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "270:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "262:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 502,
                "keyType": {
                  "id": 500,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "289:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "281:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 501,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "300:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 512,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "indexed": false,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "339:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "353:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "365:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "338:41:1"
            },
            "src": "324:56:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 520,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "indexed": false,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "400:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "indexed": false,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "415:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "432:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "399:47:1"
            },
            "src": "385:62:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 526,
            "name": "Mint",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "indexed": false,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "463:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 524,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "479:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:31:1"
            },
            "src": "452:42:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 532,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "indexed": false,
                  "name": "burner",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "510:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "526:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "509:31:1"
            },
            "src": "499:42:1"
          },
          {
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "689:227:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 543,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "699:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 544,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "708:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "699:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "699:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 547,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "725:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 548,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "732:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "725:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "725:12:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 551,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "747:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 552,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "758:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "747:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "747:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 555,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "777:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 556,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "791:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "777:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "777:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 559,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "813:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 562,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 560,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "822:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "822:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "813:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 563,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "836:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "813:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "813:35:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "880:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "872:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "872:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 570,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "884:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "884:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 572,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 540,
                        "src": "896:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 566,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "863:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "863:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "EmitStatement",
                  "src": "858:51:1"
                }
              ]
            },
            "documentation": null,
            "id": 576,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "568:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "599:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 538,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "628:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 540,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "655:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "558:123:1"
            },
            "returnParameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:0:1"
            },
            "scope": 755,
            "src": "547:369:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "951:55:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320636f6e7472616374206973206e6f742070617961626c65",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "968:30:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0eaf17aa07497723093f21cd782714890f81ecdb00c9ca30b08e64d2b8e2b4a",
                          "typeString": "literal_string \"This contract is not payable\""
                        },
                        "value": "This contract is not payable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a0eaf17aa07497723093f21cd782714890f81ecdb00c9ca30b08e64d2b8e2b4a",
                          "typeString": "literal_string \"This contract is not payable\""
                        }
                      ],
                      "id": 579,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        876,
                        877
                      ],
                      "referencedDeclaration": 877,
                      "src": "961:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "961:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "961:38:1"
                }
              ]
            },
            "documentation": null,
            "id": 584,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "931:2:1"
            },
            "returnParameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:1"
            },
            "scope": 755,
            "src": "922:84:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "1077:40:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 591,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "1094:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 593,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 592,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "1103:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1094:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 590,
                  "id": 594,
                  "nodeType": "Return",
                  "src": "1087:23:1"
                }
              ]
            },
            "documentation": null,
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "1031:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1030:16:1"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "1068:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1067:9:1"
            },
            "scope": 755,
            "src": "1012:105:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "1206:49:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 605,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "1223:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 607,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 606,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "1231:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1223:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 609,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 608,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "1239:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1223:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 604,
                  "id": 610,
                  "nodeType": "Return",
                  "src": "1216:32:1"
                }
              ]
            },
            "documentation": null,
            "id": 612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 598,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "1142:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 600,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "1158:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1158:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1141:34:1"
            },
            "returnParameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "1197:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1196:9:1"
            },
            "scope": 755,
            "src": "1123:132:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 639,
              "nodeType": "Block",
              "src": "1334:129:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 621,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "1344:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 625,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 622,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "1352:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1352:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1344:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 626,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 624,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "1364:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1344:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 627,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "1376:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1344:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:38:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 631,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "1406:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1406:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 633,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "1418:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 634,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "1428:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 630,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "1397:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1397:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 636,
                  "nodeType": "EmitStatement",
                  "src": "1392:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1452:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 620,
                  "id": 638,
                  "nodeType": "Return",
                  "src": "1445:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "1278:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 616,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "1296:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1277:34:1"
            },
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "1328:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1327:6:1"
            },
            "scope": 755,
            "src": "1261:202:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 682,
              "nodeType": "Block",
              "src": "1538:192:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "1548:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 652,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 650,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "1557:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1557:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1548:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 658,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 644,
                          "src": "1596:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 653,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "1571:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 656,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 654,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "1580:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1580:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1571:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 803,
                        "src": "1571:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1571:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1548:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "1613:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 664,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "1622:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1613:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 669,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 644,
                          "src": "1647:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 665,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "1629:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 667,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 666,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "1638:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1629:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 780,
                        "src": "1629:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1629:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1613:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 672,
                  "nodeType": "ExpressionStatement",
                  "src": "1613:41:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 674,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "1678:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1678:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "1690:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 677,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "1695:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 673,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "1669:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "EmitStatement",
                  "src": "1664:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1719:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 648,
                  "id": 681,
                  "nodeType": "Return",
                  "src": "1712:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "1487:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "1500:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1500:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1486:29:1"
            },
            "returnParameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "1532:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1531:6:1"
            },
            "scope": 755,
            "src": "1469:261:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 753,
              "nodeType": "Block",
              "src": "1824:335:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 695,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "1842:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 697,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 696,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "1850:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1842:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 700,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 698,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "1857:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1857:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1842:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 701,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "1872:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1842:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1880:24:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        874,
                        875
                      ],
                      "referencedDeclaration": 875,
                      "src": "1834:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1834:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "1834:71:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 706,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "1915:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 708,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 707,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "1924:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1915:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 713,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "1953:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 709,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "1933:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 711,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 710,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 685,
                            "src": "1942:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1933:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 803,
                        "src": "1933:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1933:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1915:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 717,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "1970:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 721,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 718,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 685,
                          "src": "1978:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1970:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 722,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 719,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "1985:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1985:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1970:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 730,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "2030:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 723,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "1999:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 725,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 724,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "2007:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1999:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 728,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 726,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "2014:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2014:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1999:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 803,
                        "src": "1999:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1999:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1970:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:67:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "2047:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 736,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 735,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "2056:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2047:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 741,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "2081:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 737,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "2063:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 739,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 738,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "2072:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2063:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 780,
                        "src": "2063:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2063:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2047:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 744,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:41:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 746,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "2112:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 747,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "2119:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 748,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "2124:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 745,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "2103:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2103:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "EmitStatement",
                  "src": "2098:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2148:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 693,
                  "id": 752,
                  "nodeType": "Return",
                  "src": "2141:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 754,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 685,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "1758:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1758:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 687,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "1773:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1773:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 689,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "1786:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1786:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1757:44:1"
            },
            "returnParameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "1818:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1817:6:1"
            },
            "scope": 755,
            "src": "1736:423:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 756,
        "src": "51:2111:1"
      }
    ],
    "src": "0:2163:1"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610a61380380610a618339818101604052608081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156100ff57600080fd5b90830190602082018581111561011457600080fd5b825164010000000081118282018810171561012e57600080fd5b82525081516020918201929091019080838360005b8381101561015b578181015183820152602001610143565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b5060409081526020828101519290910151865192945092506101af9160009187019061022a565b5082516101c390600190602086019061022a565b506002829055600381905533600081815260046020908152604080832085905580519283529082019290925280820183905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1505050506102c5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061026b57805160ff1916838001178555610298565b82800160010185558215610298579182015b8281111561029857825182559160200191906001019061027d565b506102a49291506102a8565b5090565b6102c291905b808211156102a457600081556001016102ae565b90565b61078d806102d46000396000f3fe6080604052600436106100865760003560e01c8063313ce56711610059578063313ce5671461021457806370a082311461022957806395d89b411461025c578063a9059cbb14610271578063dd62ed3e146102aa57610086565b806306fdde03146100d3578063095ea7b31461015d57806318160ddd146101aa57806323b872dd146101d1575b6040805162461bcd60e51b815260206004820152601c60248201527f5468697320636f6e7472616374206973206e6f742070617961626c6500000000604482015290519081900360640190fd5b3480156100df57600080fd5b506100e86102e5565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012257818101518382015260200161010a565b50505050905090810190601f16801561014f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016957600080fd5b506101966004803603604081101561018057600080fd5b506001600160a01b038135169060200135610372565b604080519115158252519081900360200190f35b3480156101b657600080fd5b506101bf6103e4565b60408051918252519081900360200190f35b3480156101dd57600080fd5b50610196600480360360608110156101f457600080fd5b506001600160a01b038135811691602081013590911690604001356103ea565b34801561022057600080fd5b506101bf61056d565b34801561023557600080fd5b506101bf6004803603602081101561024c57600080fd5b50356001600160a01b0316610573565b34801561026857600080fd5b506100e861058e565b34801561027d57600080fd5b506101966004803603604081101561029457600080fd5b506001600160a01b0381351690602001356105e9565b3480156102b657600080fd5b506101bf600480360360408110156102cd57600080fd5b506001600160a01b03813581169160200135166106a1565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561036a5780601f1061033f5761010080835404028352916020019161036a565b820191906000526020600020905b81548152906001019060200180831161034d57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528281018490525190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925919081900360600190a15060015b92915050565b60035481565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561045b576040805162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015290519081900360640190fd5b6001600160a01b038416600090815260046020526040902054610484908363ffffffff6106cc16565b6001600160a01b03851660009081526004602090815260408083209390935560058152828220338352905220546104c1908363ffffffff6106cc16565b6001600160a01b038086166000908152600560209081526040808320338452825280832094909455918616815260049091522054610505908363ffffffff61071516565b6001600160a01b0380851660008181526004602090815260409182902094909455805192881683529282015280820184905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a15060019392505050565b60025481565b6001600160a01b031660009081526004602052604090205490565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561036a5780601f1061033f5761010080835404028352916020019161036a565b33600090815260046020526040812054610609908363ffffffff6106cc16565b33600090815260046020526040808220929092556001600160a01b0385168152205461063b908363ffffffff61071516565b6001600160a01b03841660008181526004602090815260409182902093909355805133815292830191909152818101849052517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a150600192915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60008282111561070f576040805162461bcd60e51b8152602060048201526009602482015268556e646572666c6f7760b81b604482015290519081900360640190fd5b50900390565b818101828110156103de576040805162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b604482015290519081900360640190fdfea265627a7a723158203b247749b2a7049bb37e1f7625a889b5778ac64a74e7844744a2602af73b3f6e64736f6c634300050b0032",
  "bytecodeSha1": "f4e10619426d9cdf66dd3225313977c0f98da00e",
  "compiler": {
    "evm_version": "petersburg",
    "minify_source": false,
    "optimize": true,
    "runs": 200,
    "version": "Version: 0.5.11+commit.22be8592.Darwin.appleclang"
  },
  "contractName": "MockDai",
  "coverageMap": {
    "branches": {
      "contracts/MockDai.sol": {
        "MockDai.transferFrom": {
          "22": [
            1842,
            1878,
            true
          ]
        }
      },
      "contracts/SafeMath.sol": {
        "SafeMath.add": {
          "21": [
            145,
            151,
            true
          ]
        },
        "SafeMath.sub": {
          "20": [
            254,
            260,
            true
          ]
        }
      }
    },
    "statements": {
      "contracts/MockDai.sol": {
        "MockDai.<fallback>": {
          "0": [
            961,
            999
          ]
        },
        "MockDai.allowance": {
          "15": [
            1216,
            1248
          ]
        },
        "MockDai.approve": {
          "1": [
            1344,
            1382
          ],
          "2": [
            1392,
            1435
          ],
          "3": [
            1445,
            1456
          ]
        },
        "MockDai.balanceOf": {
          "10": [
            1087,
            1110
          ]
        },
        "MockDai.transfer": {
          "11": [
            1548,
            1603
          ],
          "12": [
            1613,
            1654
          ],
          "13": [
            1664,
            1702
          ],
          "14": [
            1712,
            1723
          ]
        },
        "MockDai.transferFrom": {
          "4": [
            1834,
            1905
          ],
          "5": [
            1915,
            1960
          ],
          "6": [
            1970,
            2037
          ],
          "7": [
            2047,
            2088
          ],
          "8": [
            2098,
            2131
          ],
          "9": [
            2141,
            2152
          ]
        }
      },
      "contracts/SafeMath.sol": {
        "SafeMath.add": {
          "18": [
            118,
            127
          ],
          "19": [
            137,
            164
          ]
        },
        "SafeMath.sub": {
          "16": [
            246,
            274
          ],
          "17": [
            284,
            293
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "6080604052600436106100865760003560e01c8063313ce56711610059578063313ce5671461021457806370a082311461022957806395d89b411461025c578063a9059cbb14610271578063dd62ed3e146102aa57610086565b806306fdde03146100d3578063095ea7b31461015d57806318160ddd146101aa57806323b872dd146101d1575b6040805162461bcd60e51b815260206004820152601c60248201527f5468697320636f6e7472616374206973206e6f742070617961626c6500000000604482015290519081900360640190fd5b3480156100df57600080fd5b506100e86102e5565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012257818101518382015260200161010a565b50505050905090810190601f16801561014f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016957600080fd5b506101966004803603604081101561018057600080fd5b506001600160a01b038135169060200135610372565b604080519115158252519081900360200190f35b3480156101b657600080fd5b506101bf6103e4565b60408051918252519081900360200190f35b3480156101dd57600080fd5b50610196600480360360608110156101f457600080fd5b506001600160a01b038135811691602081013590911690604001356103ea565b34801561022057600080fd5b506101bf61056d565b34801561023557600080fd5b506101bf6004803603602081101561024c57600080fd5b50356001600160a01b0316610573565b34801561026857600080fd5b506100e861058e565b34801561027d57600080fd5b506101966004803603604081101561029457600080fd5b506001600160a01b0381351690602001356105e9565b3480156102b657600080fd5b506101bf600480360360408110156102cd57600080fd5b506001600160a01b03813581169160200135166106a1565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561036a5780601f1061033f5761010080835404028352916020019161036a565b820191906000526020600020905b81548152906001019060200180831161034d57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528281018490525190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925919081900360600190a15060015b92915050565b60035481565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561045b576040805162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015290519081900360640190fd5b6001600160a01b038416600090815260046020526040902054610484908363ffffffff6106cc16565b6001600160a01b03851660009081526004602090815260408083209390935560058152828220338352905220546104c1908363ffffffff6106cc16565b6001600160a01b038086166000908152600560209081526040808320338452825280832094909455918616815260049091522054610505908363ffffffff61071516565b6001600160a01b0380851660008181526004602090815260409182902094909455805192881683529282015280820184905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a15060019392505050565b60025481565b6001600160a01b031660009081526004602052604090205490565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561036a5780601f1061033f5761010080835404028352916020019161036a565b33600090815260046020526040812054610609908363ffffffff6106cc16565b33600090815260046020526040808220929092556001600160a01b0385168152205461063b908363ffffffff61071516565b6001600160a01b03841660008181526004602090815260409182902093909355805133815292830191909152818101849052517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a150600192915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60008282111561070f576040805162461bcd60e51b8152602060048201526009602482015268556e646572666c6f7760b81b604482015290519081900360640190fd5b50900390565b818101828110156103de576040805162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b604482015290519081900360640190fdfea265627a7a723158203b247749b2a7049bb37e1f7625a889b5778ac64a74e7844744a2602af73b3f6e64736f6c634300050b0032",
  "deployedSourceMap": "51:2111:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;961:38;;;-1:-1:-1;;;961:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;134:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;134:18:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;134:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1261:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1261:202:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1261:202:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;187:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;187:26:1;;;:::i;:::-;;;;;;;;;;;;;;;;1736:423;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1736:423:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1736:423:1;;;;;;;;;;;;;;;;;:::i;158:23::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;158:23:1;;;:::i;1012:105::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1012:105:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1012:105:1;-1:-1:-1;;;;;1012:105:1;;:::i;108:20::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;108:20:1;;;:::i;1469:261::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1469:261:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1469:261:1;;;;;;;;:::i;1123:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1123:132:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1123:132:1;;;;;;;;;;:::i;134:18::-;;;;;;;;;;;;;;;-1:-1:-1;;134:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1261:202::-;1352:10;1328:4;1344:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1344:29:1;;;;;;;;;;;:38;;;1397;;;;;;;;;;;;;;;;;;;1328:4;;1397:38;;;;;;;;;;-1:-1:-1;1452:4:1;1261:202;;;;;:::o;187:26::-;;;;:::o;1736:423::-;-1:-1:-1;;;;;1842:14:1;;1818:4;1842:14;;;:7;:14;;;;;;;;1857:10;1842:26;;;;;;;;:36;-1:-1:-1;1842:36:1;1834:71;;;;;-1:-1:-1;;;1834:71:1;;;;;;;;;;;;-1:-1:-1;;;1834:71:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;1933:15:1;;;;;;:8;:15;;;;;;:27;;1953:6;1933:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;1915:15:1;;;;;;:8;:15;;;;;;;;:45;;;;1999:7;:14;;;;;2014:10;1999:26;;;;;;:38;;2030:6;1999:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1970:14:1;;;;;;;:7;:14;;;;;;;;1985:10;1970:26;;;;;;;:67;;;;2063:13;;;;;:8;:13;;;;;:25;;2081:6;2063:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;2047:13:1;;;;;;;:8;:13;;;;;;;;;:41;;;;2103:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2148:4:1;1736:423;;;;;:::o;158:23::-;;;;:::o;1012:105::-;-1:-1:-1;;;;;1094:16:1;1068:7;1094:16;;;:8;:16;;;;;;;1012:105::o;108:20::-;;;;;;;;;;;;;;;-1:-1:-1;;108:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:261;1580:10;1532:4;1571:20;;;:8;:20;;;;;;:32;;1596:6;1571:32;:24;:32;:::i;:::-;1557:10;1548:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;1629:13:1;;;;;;:25;;1647:6;1629:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1613:13:1;;;;;;:8;:13;;;;;;;;;:41;;;;1669:33;;1678:10;1669:33;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1719:4:1;1469:261;;;;:::o;1123:132::-;-1:-1:-1;;;;;1223:15:1;;;1197:7;1223:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;1123:132::o;176:124:2:-;228:6;259:1;254;:6;;246:28;;;;;-1:-1:-1;;;246:28:2;;;;;;;;;;;;-1:-1:-1;;;246:28:2;;;;;;;;;;;;;;;-1:-1:-1;288:5:2;;;176:124::o;48:123::-;122:5;;;145:6;;;;137:27;;;;;-1:-1:-1;;;137:27:2;;;;;;;;;;;;-1:-1:-1;;;137:27:2;;;;;;;;;;;;;",
  "offset": [
    51,
    2162
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xe0 SHR DUP1 PUSH4 0x313ce567 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x313ce567 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x70a08231 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95d89b41 EQ PUSH2 0x25c JUMPI DUP1 PUSH4 0xa9059cbb EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xdd62ed3e EQ PUSH2 0x2aa JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x6fdde03 EQ PUSH2 0xd3 JUMPI DUP1 PUSH4 0x95ea7b3 EQ PUSH2 0x15d JUMPI DUP1 PUSH4 0x18160ddd EQ PUSH2 0x1aa JUMPI DUP1 PUSH4 0x23b872dd EQ PUSH2 0x1d1 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1c PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320636f6e7472616374206973206e6f742070617961626c6500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xdf JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xe8 PUSH2 0x2e5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x122 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10a JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1f AND DUP1 ISZERO PUSH2 0x14f JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1b6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1bf PUSH2 0x3e4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1dd JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1f4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3ea JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1bf PUSH2 0x56d JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1bf PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24c JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB AND PUSH2 0x573 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xe8 PUSH2 0x58e JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27d JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5e9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2b6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1bf PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2cd JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6a1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 DUP5 DUP7 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1f DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x36a JUMPI DUP1 PUSH1 0x1f LT PUSH2 0x33f JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x36a JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34d JUMPI DUP3 SWAP1 SUB PUSH1 0x1f AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 DUP2 ADD DUP5 SWAP1 MSTORE MLOAD SWAP1 SWAP2 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x45b JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496e73756666696369656e7420616c6c6f77616e6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x484 SWAP1 DUP4 PUSH4 0xffffffff PUSH2 0x6cc AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x4c1 SWAP1 DUP4 PUSH4 0xffffffff PUSH2 0x6cc AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x505 SWAP1 DUP4 PUSH4 0xffffffff PUSH2 0x715 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD SWAP3 DUP9 AND DUP4 MSTORE SWAP3 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1f DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x36a JUMPI DUP1 PUSH1 0x1f LT PUSH2 0x33f JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x36a JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x609 SWAP1 DUP4 PUSH4 0xffffffff PUSH2 0x6cc AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x63b SWAP1 DUP4 PUSH4 0xffffffff PUSH2 0x715 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD CALLER DUP2 MSTORE SWAP3 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP2 ADD DUP5 SWAP1 MSTORE MLOAD PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x70f JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x556e646572666c6f77 PUSH1 0xb8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x3de JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x4f766572666c6f77 PUSH1 0xc0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627a7a723158 KECCAK256 EXTCODESIZE 0x24 PUSH24 0x49b2a7049bb37e1f7625a889b5778ac64a74e7844744a260 0x2a 0xf7 EXTCODESIZE EXTCODEHASH PUSH15 0x64736f6c634300050b003200000000 ",
  "pcMap": {
    "0": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x80"
    },
    "2": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "4": {
      "offset": [
        51,
        2162
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "5": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "7": {
      "offset": [
        51,
        2162
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "8": {
      "offset": [
        51,
        2162
      ],
      "op": "LT",
      "path": "contracts/MockDai.sol"
    },
    "9": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x86"
    },
    "12": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "13": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "15": {
      "offset": [
        51,
        2162
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "16": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0xe0"
    },
    "18": {
      "offset": [
        51,
        2162
      ],
      "op": "SHR",
      "path": "contracts/MockDai.sol"
    },
    "19": {
      "offset": [
        51,
        2162
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "20": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x313ce567"
    },
    "25": {
      "offset": [
        51,
        2162
      ],
      "op": "GT",
      "path": "contracts/MockDai.sol"
    },
    "26": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x59"
    },
    "29": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "30": {
      "offset": [
        51,
        2162
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "31": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x313ce567"
    },
    "36": {
      "offset": [
        51,
        2162
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "37": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x214"
    },
    "40": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "41": {
      "offset": [
        51,
        2162
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "42": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x70a08231"
    },
    "47": {
      "offset": [
        51,
        2162
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "48": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x229"
    },
    "51": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "52": {
      "offset": [
        51,
        2162
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "53": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x95d89b41"
    },
    "58": {
      "offset": [
        51,
        2162
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "59": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x25c"
    },
    "62": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "63": {
      "offset": [
        51,
        2162
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "64": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xa9059cbb"
    },
    "69": {
      "offset": [
        51,
        2162
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "70": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x271"
    },
    "73": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "74": {
      "offset": [
        51,
        2162
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "75": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xdd62ed3e"
    },
    "80": {
      "offset": [
        51,
        2162
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "81": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x2aa"
    },
    "84": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "85": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x86"
    },
    "88": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "89": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "90": {
      "offset": [
        51,
        2162
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "91": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x6fdde03"
    },
    "96": {
      "offset": [
        51,
        2162
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "97": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0xd3"
    },
    "100": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "101": {
      "offset": [
        51,
        2162
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "102": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x95ea7b3"
    },
    "107": {
      "offset": [
        51,
        2162
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "108": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x15d"
    },
    "111": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "112": {
      "offset": [
        51,
        2162
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "113": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x18160ddd"
    },
    "118": {
      "offset": [
        51,
        2162
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "119": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x1aa"
    },
    "122": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "123": {
      "offset": [
        51,
        2162
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "124": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x23b872dd"
    },
    "129": {
      "offset": [
        51,
        2162
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "130": {
      "offset": [
        51,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x1d1"
    },
    "133": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "134": {
      "offset": [
        51,
        2162
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "135": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "statement": 0,
      "value": "0x40"
    },
    "137": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "138": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "139": {
      "op": "PUSH3",
      "value": "0x461bcd"
    },
    "143": {
      "op": "PUSH1",
      "value": "0xe5"
    },
    "145": {
      "op": "SHL"
    },
    "146": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "147": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "148": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "150": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "152": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "153": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "154": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "155": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1c"
    },
    "157": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x24"
    },
    "159": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "160": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "161": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "162": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "PUSH32",
      "path": "contracts/MockDai.sol",
      "value": "0x5468697320636f6e7472616374206973206e6f742070617961626c6500000000"
    },
    "195": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x44"
    },
    "197": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "198": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "199": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "200": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "201": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "202": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "203": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "204": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "205": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "206": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x64"
    },
    "208": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "209": {
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "210": {
      "dev": "",
      "fn": "MockDai.<fallback>",
      "offset": [
        961,
        999
      ],
      "op": "REVERT",
      "path": "contracts/MockDai.sol"
    },
    "211": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "212": {
      "offset": [
        134,
        152
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "213": {
      "op": "DUP1"
    },
    "214": {
      "op": "ISZERO"
    },
    "215": {
      "op": "PUSH2",
      "value": "0xdf"
    },
    "218": {
      "op": "JUMPI"
    },
    "219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "221": {
      "op": "DUP1"
    },
    "222": {
      "op": "REVERT"
    },
    "223": {
      "op": "JUMPDEST"
    },
    "224": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "225": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0xe8"
    },
    "228": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x2e5"
    },
    "231": {
      "jump": "i",
      "offset": [
        134,
        152
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "232": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "233": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "235": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "236": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "237": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "239": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "240": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "241": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "242": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "243": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "244": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "245": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "246": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "247": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "248": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "249": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "250": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "251": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "252": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "253": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "254": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "255": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "256": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "257": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "258": {
      "offset": [
        134,
        152
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "259": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "260": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "261": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "262": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "263": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "264": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "266": {
      "op": "JUMPDEST"
    },
    "267": {
      "op": "DUP4"
    },
    "268": {
      "op": "DUP2"
    },
    "269": {
      "op": "LT"
    },
    "270": {
      "op": "ISZERO"
    },
    "271": {
      "op": "PUSH2",
      "value": "0x122"
    },
    "274": {
      "op": "JUMPI"
    },
    "275": {
      "op": "DUP2"
    },
    "276": {
      "op": "DUP2"
    },
    "277": {
      "op": "ADD"
    },
    "278": {
      "op": "MLOAD"
    },
    "279": {
      "op": "DUP4"
    },
    "280": {
      "op": "DUP3"
    },
    "281": {
      "op": "ADD"
    },
    "282": {
      "op": "MSTORE"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "285": {
      "op": "ADD"
    },
    "286": {
      "op": "PUSH2",
      "value": "0x10a"
    },
    "289": {
      "op": "JUMP"
    },
    "290": {
      "op": "JUMPDEST"
    },
    "291": {
      "op": "POP"
    },
    "292": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "293": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "294": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "295": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "296": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "297": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "298": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "299": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "300": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "301": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "303": {
      "offset": [
        134,
        152
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "304": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "305": {
      "offset": [
        134,
        152
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "306": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x14f"
    },
    "309": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "310": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "311": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "312": {
      "offset": [
        134,
        152
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "313": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "314": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "315": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1"
    },
    "317": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "318": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "320": {
      "offset": [
        134,
        152
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "321": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x100"
    },
    "324": {
      "offset": [
        134,
        152
      ],
      "op": "EXP",
      "path": "contracts/MockDai.sol"
    },
    "325": {
      "offset": [
        134,
        152
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "326": {
      "offset": [
        134,
        152
      ],
      "op": "NOT",
      "path": "contracts/MockDai.sol"
    },
    "327": {
      "offset": [
        134,
        152
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "328": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "329": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "330": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "332": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "333": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "334": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "335": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "336": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "337": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "338": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "339": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "340": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "341": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "343": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "344": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "345": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "346": {
      "offset": [
        134,
        152
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "347": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "348": {
      "offset": [
        134,
        152
      ],
      "op": "RETURN",
      "path": "contracts/MockDai.sol"
    },
    "349": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "350": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "351": {
      "op": "DUP1"
    },
    "352": {
      "op": "ISZERO"
    },
    "353": {
      "op": "PUSH2",
      "value": "0x169"
    },
    "356": {
      "op": "JUMPI"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "359": {
      "op": "DUP1"
    },
    "360": {
      "op": "REVERT"
    },
    "361": {
      "op": "JUMPDEST"
    },
    "362": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "363": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x196"
    },
    "366": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "368": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "369": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "370": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "373": {
      "op": "DUP2"
    },
    "374": {
      "op": "LT"
    },
    "375": {
      "op": "ISZERO"
    },
    "376": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "379": {
      "op": "JUMPI"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "382": {
      "op": "DUP1"
    },
    "383": {
      "op": "REVERT"
    },
    "384": {
      "op": "JUMPDEST"
    },
    "385": {
      "op": "POP"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "392": {
      "op": "SHL"
    },
    "393": {
      "op": "SUB"
    },
    "394": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "395": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "396": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "397": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "398": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "400": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "401": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "402": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x372"
    },
    "405": {
      "fn": "MockDai.approve",
      "jump": "i",
      "offset": [
        1261,
        1463
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "406": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "407": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "409": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "410": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "411": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "412": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "413": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "414": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "415": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "416": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "417": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "418": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "419": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "420": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "421": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "423": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "424": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "425": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "RETURN",
      "path": "contracts/MockDai.sol"
    },
    "426": {
      "offset": [
        187,
        213
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "427": {
      "offset": [
        187,
        213
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "428": {
      "op": "DUP1"
    },
    "429": {
      "op": "ISZERO"
    },
    "430": {
      "op": "PUSH2",
      "value": "0x1b6"
    },
    "433": {
      "op": "JUMPI"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "436": {
      "op": "DUP1"
    },
    "437": {
      "op": "REVERT"
    },
    "438": {
      "op": "JUMPDEST"
    },
    "439": {
      "offset": [
        187,
        213
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "440": {
      "offset": [
        187,
        213
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x1bf"
    },
    "443": {
      "offset": [
        187,
        213
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x3e4"
    },
    "446": {
      "jump": "i",
      "offset": [
        187,
        213
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "447": {
      "offset": [
        187,
        213
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "448": {
      "offset": [
        187,
        213
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "450": {
      "offset": [
        187,
        213
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "451": {
      "offset": [
        187,
        213
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "452": {
      "offset": [
        187,
        213
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "453": {
      "offset": [
        187,
        213
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "454": {
      "offset": [
        187,
        213
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "455": {
      "offset": [
        187,
        213
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "456": {
      "offset": [
        187,
        213
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "457": {
      "offset": [
        187,
        213
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "458": {
      "offset": [
        187,
        213
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "459": {
      "offset": [
        187,
        213
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "460": {
      "offset": [
        187,
        213
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "462": {
      "offset": [
        187,
        213
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "463": {
      "offset": [
        187,
        213
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "464": {
      "offset": [
        187,
        213
      ],
      "op": "RETURN",
      "path": "contracts/MockDai.sol"
    },
    "465": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "466": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "467": {
      "op": "DUP1"
    },
    "468": {
      "op": "ISZERO"
    },
    "469": {
      "op": "PUSH2",
      "value": "0x1dd"
    },
    "472": {
      "op": "JUMPI"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "475": {
      "op": "DUP1"
    },
    "476": {
      "op": "REVERT"
    },
    "477": {
      "op": "JUMPDEST"
    },
    "478": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "479": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x196"
    },
    "482": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "484": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "485": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "486": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "489": {
      "op": "DUP2"
    },
    "490": {
      "op": "LT"
    },
    "491": {
      "op": "ISZERO"
    },
    "492": {
      "op": "PUSH2",
      "value": "0x1f4"
    },
    "495": {
      "op": "JUMPI"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "498": {
      "op": "DUP1"
    },
    "499": {
      "op": "REVERT"
    },
    "500": {
      "op": "JUMPDEST"
    },
    "501": {
      "op": "POP"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "506": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "508": {
      "op": "SHL"
    },
    "509": {
      "op": "SUB"
    },
    "510": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "511": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "512": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "513": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "514": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "515": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "517": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "518": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "519": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "520": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "521": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "522": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "523": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "524": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "526": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "527": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "528": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x3ea"
    },
    "531": {
      "fn": "MockDai.transferFrom",
      "jump": "i",
      "offset": [
        1736,
        2159
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "532": {
      "offset": [
        158,
        181
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "533": {
      "offset": [
        158,
        181
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "534": {
      "op": "DUP1"
    },
    "535": {
      "op": "ISZERO"
    },
    "536": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "539": {
      "op": "JUMPI"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "542": {
      "op": "DUP1"
    },
    "543": {
      "op": "REVERT"
    },
    "544": {
      "op": "JUMPDEST"
    },
    "545": {
      "offset": [
        158,
        181
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "546": {
      "offset": [
        158,
        181
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x1bf"
    },
    "549": {
      "offset": [
        158,
        181
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x56d"
    },
    "552": {
      "jump": "i",
      "offset": [
        158,
        181
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "553": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "554": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "555": {
      "op": "DUP1"
    },
    "556": {
      "op": "ISZERO"
    },
    "557": {
      "op": "PUSH2",
      "value": "0x235"
    },
    "560": {
      "op": "JUMPI"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "563": {
      "op": "DUP1"
    },
    "564": {
      "op": "REVERT"
    },
    "565": {
      "op": "JUMPDEST"
    },
    "566": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "567": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x1bf"
    },
    "570": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "572": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "573": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "574": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "577": {
      "op": "DUP2"
    },
    "578": {
      "op": "LT"
    },
    "579": {
      "op": "ISZERO"
    },
    "580": {
      "op": "PUSH2",
      "value": "0x24c"
    },
    "583": {
      "op": "JUMPI"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "586": {
      "op": "DUP1"
    },
    "587": {
      "op": "REVERT"
    },
    "588": {
      "op": "JUMPDEST"
    },
    "589": {
      "op": "POP"
    },
    "590": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "597": {
      "op": "SHL"
    },
    "598": {
      "op": "SUB"
    },
    "599": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "600": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x573"
    },
    "603": {
      "fn": "MockDai.balanceOf",
      "jump": "i",
      "offset": [
        1012,
        1117
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "604": {
      "offset": [
        108,
        128
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "605": {
      "offset": [
        108,
        128
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "606": {
      "op": "DUP1"
    },
    "607": {
      "op": "ISZERO"
    },
    "608": {
      "op": "PUSH2",
      "value": "0x268"
    },
    "611": {
      "op": "JUMPI"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "614": {
      "op": "DUP1"
    },
    "615": {
      "op": "REVERT"
    },
    "616": {
      "op": "JUMPDEST"
    },
    "617": {
      "offset": [
        108,
        128
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "618": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0xe8"
    },
    "621": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x58e"
    },
    "624": {
      "jump": "i",
      "offset": [
        108,
        128
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "625": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "626": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "627": {
      "op": "DUP1"
    },
    "628": {
      "op": "ISZERO"
    },
    "629": {
      "op": "PUSH2",
      "value": "0x27d"
    },
    "632": {
      "op": "JUMPI"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "635": {
      "op": "DUP1"
    },
    "636": {
      "op": "REVERT"
    },
    "637": {
      "op": "JUMPDEST"
    },
    "638": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "639": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x196"
    },
    "642": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "644": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "645": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "646": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "649": {
      "op": "DUP2"
    },
    "650": {
      "op": "LT"
    },
    "651": {
      "op": "ISZERO"
    },
    "652": {
      "op": "PUSH2",
      "value": "0x294"
    },
    "655": {
      "op": "JUMPI"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "658": {
      "op": "DUP1"
    },
    "659": {
      "op": "REVERT"
    },
    "660": {
      "op": "JUMPDEST"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "op": "SUB"
    },
    "670": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "671": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "672": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "673": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "674": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "676": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "677": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "678": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x5e9"
    },
    "681": {
      "fn": "MockDai.transfer",
      "jump": "i",
      "offset": [
        1469,
        1730
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "682": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "683": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "684": {
      "op": "DUP1"
    },
    "685": {
      "op": "ISZERO"
    },
    "686": {
      "op": "PUSH2",
      "value": "0x2b6"
    },
    "689": {
      "op": "JUMPI"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "692": {
      "op": "DUP1"
    },
    "693": {
      "op": "REVERT"
    },
    "694": {
      "op": "JUMPDEST"
    },
    "695": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "696": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x1bf"
    },
    "699": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "701": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "702": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "703": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "706": {
      "op": "DUP2"
    },
    "707": {
      "op": "LT"
    },
    "708": {
      "op": "ISZERO"
    },
    "709": {
      "op": "PUSH2",
      "value": "0x2cd"
    },
    "712": {
      "op": "JUMPI"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "715": {
      "op": "DUP1"
    },
    "716": {
      "op": "REVERT"
    },
    "717": {
      "op": "JUMPDEST"
    },
    "718": {
      "op": "POP"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "725": {
      "op": "SHL"
    },
    "726": {
      "op": "SUB"
    },
    "727": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "728": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "729": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "730": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "731": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "732": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "734": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "735": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "736": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "737": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x6a1"
    },
    "740": {
      "fn": "MockDai.allowance",
      "jump": "i",
      "offset": [
        1123,
        1255
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "741": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "742": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1"
    },
    "744": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "745": {
      "offset": [
        134,
        152
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "746": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "748": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "749": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "750": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "752": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x2"
    },
    "754": {
      "offset": [
        134,
        152
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "755": {
      "offset": [
        134,
        152
      ],
      "op": "DUP7",
      "path": "contracts/MockDai.sol"
    },
    "756": {
      "offset": [
        134,
        152
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "757": {
      "offset": [
        134,
        152
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "758": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x100"
    },
    "761": {
      "offset": [
        134,
        152
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "764": {
      "op": "NOT"
    },
    "765": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "766": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "767": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "768": {
      "offset": [
        134,
        152
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "769": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "770": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "771": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "772": {
      "offset": [
        134,
        152
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "773": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "775": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "776": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "777": {
      "offset": [
        134,
        152
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "778": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "779": {
      "offset": [
        134,
        152
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "780": {
      "offset": [
        134,
        152
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "781": {
      "offset": [
        134,
        152
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "782": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "783": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "784": {
      "offset": [
        134,
        152
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "785": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "786": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "787": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "788": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "789": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "790": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "791": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "792": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "793": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "794": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "795": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "796": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "797": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "798": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "799": {
      "offset": [
        134,
        152
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "800": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x36a"
    },
    "803": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "804": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "805": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "807": {
      "offset": [
        134,
        152
      ],
      "op": "LT",
      "path": "contracts/MockDai.sol"
    },
    "808": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x33f"
    },
    "811": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "812": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x100"
    },
    "815": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "816": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "817": {
      "offset": [
        134,
        152
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "818": {
      "offset": [
        134,
        152
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "819": {
      "offset": [
        134,
        152
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "820": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "821": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "822": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "823": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "825": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "826": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "827": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x36a"
    },
    "830": {
      "offset": [
        134,
        152
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "831": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "832": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "833": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "834": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "835": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "836": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "838": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "839": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "841": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "843": {
      "offset": [
        134,
        152
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "844": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "845": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "846": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "847": {
      "offset": [
        134,
        152
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "848": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "849": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "850": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "851": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1"
    },
    "853": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "854": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "855": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "857": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "858": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "859": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "860": {
      "offset": [
        134,
        152
      ],
      "op": "GT",
      "path": "contracts/MockDai.sol"
    },
    "861": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x34d"
    },
    "864": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "865": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "866": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "867": {
      "offset": [
        134,
        152
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "868": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "870": {
      "offset": [
        134,
        152
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "871": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "872": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "873": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "874": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "875": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "876": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "877": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "878": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "879": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "880": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "881": {
      "jump": "o",
      "offset": [
        134,
        152
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "882": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "883": {
      "fn": "MockDai.approve",
      "offset": [
        1352,
        1362
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol",
      "statement": 1
    },
    "884": {
      "fn": "MockDai.approve",
      "offset": [
        1328,
        1332
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "886": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "887": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "888": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "889": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1351
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x5"
    },
    "891": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "893": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "894": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "895": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "896": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "898": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "899": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "900": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1363
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "907": {
      "op": "SHL"
    },
    "908": {
      "op": "SUB"
    },
    "909": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "DUP8",
      "path": "contracts/MockDai.sol"
    },
    "910": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "911": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "912": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "913": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "914": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "915": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "916": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "917": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "918": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "919": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1373
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "920": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1382
      ],
      "op": "DUP7",
      "path": "contracts/MockDai.sol"
    },
    "921": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1382
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "922": {
      "fn": "MockDai.approve",
      "offset": [
        1344,
        1382
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "923": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol",
      "statement": 2
    },
    "924": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "925": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "926": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "927": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "928": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "929": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "930": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "931": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "932": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "933": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "934": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "935": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "936": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "937": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "938": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "939": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "940": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "941": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "942": {
      "fn": "MockDai.approve",
      "offset": [
        1328,
        1332
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "943": {
      "fn": "MockDai.approve",
      "offset": [
        1328,
        1332
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "944": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "PUSH32",
      "path": "contracts/MockDai.sol",
      "value": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    "977": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "978": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "979": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "980": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "981": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "982": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x60"
    },
    "984": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "985": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "986": {
      "fn": "MockDai.approve",
      "offset": [
        1397,
        1435
      ],
      "op": "LOG1",
      "path": "contracts/MockDai.sol"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "fn": "MockDai.approve",
      "offset": [
        1452,
        1456
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "statement": 3,
      "value": "0x1"
    },
    "990": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "991": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "992": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "993": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "994": {
      "fn": "MockDai.approve",
      "offset": [
        1261,
        1463
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "995": {
      "fn": "MockDai.approve",
      "jump": "o",
      "offset": [
        1261,
        1463
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "996": {
      "offset": [
        187,
        213
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "997": {
      "offset": [
        187,
        213
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x3"
    },
    "999": {
      "offset": [
        187,
        213
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1000": {
      "offset": [
        187,
        213
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1001": {
      "jump": "o",
      "offset": [
        187,
        213
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1002": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1009": {
      "op": "SHL"
    },
    "1010": {
      "op": "SUB"
    },
    "1011": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol",
      "statement": 4
    },
    "1012": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1013": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1818,
        1822
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1015": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1016": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1017": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1018": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1849
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x5"
    },
    "1020": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1022": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1023": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1024": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1025": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1027": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1028": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1029": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1856
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1030": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1857,
        1867
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol"
    },
    "1031": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1868
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1032": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1868
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1033": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1868
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1034": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1868
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1035": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1868
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1036": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1868
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1037": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1868
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1038": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1868
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1039": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1878
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1040": {
      "op": "GT"
    },
    "1041": {
      "branch": 22,
      "fn": "MockDai.transferFrom",
      "offset": [
        1842,
        1878
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "1042": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x45b"
    },
    "1045": {
      "branch": 22,
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "1046": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1048": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1049": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1050": {
      "op": "PUSH3",
      "value": "0x461bcd"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0xe5"
    },
    "1056": {
      "op": "SHL"
    },
    "1057": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1058": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1059": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1061": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1063": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1064": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1065": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1066": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x16"
    },
    "1068": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x24"
    },
    "1070": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1071": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1072": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1073": {
      "op": "PUSH22",
      "value": "0x496e73756666696369656e7420616c6c6f77616e6365"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1098": {
      "op": "SHL"
    },
    "1099": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x44"
    },
    "1101": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1102": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1103": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1104": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1105": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1106": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1107": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1108": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1109": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "1110": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x64"
    },
    "1112": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1113": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1114": {
      "dev": "",
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "REVERT",
      "path": "contracts/MockDai.sol"
    },
    "1115": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1834,
        1905
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1122": {
      "op": "SHL"
    },
    "1123": {
      "op": "SUB"
    },
    "1124": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol",
      "statement": 5
    },
    "1125": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1126": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1128": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1129": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1130": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1131": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1941
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1133": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1135": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1136": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1138": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1139": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1140": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1948
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1141": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1960
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x484"
    },
    "1144": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1960
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1145": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1953,
        1959
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1146": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1960
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xffffffff"
    },
    "1151": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1952
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x6cc"
    },
    "1154": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1960
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1155": {
      "fn": "MockDai.transferFrom",
      "jump": "i",
      "offset": [
        1933,
        1960
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1156": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1933,
        1960
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1163": {
      "op": "SHL"
    },
    "1164": {
      "op": "SUB"
    },
    "1165": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "1166": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1167": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1169": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1170": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1171": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1172": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1174": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1176": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1177": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1178": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1179": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1181": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1182": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1183": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1930
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1184": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1960
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1185": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1960
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1186": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1960
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1187": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1915,
        1960
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1188": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2006
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "statement": 6,
      "value": "0x5"
    },
    "1190": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2013
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1191": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2013
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1192": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2013
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1193": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2013
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1194": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2013
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1195": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2014,
        2024
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol"
    },
    "1196": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2025
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1197": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2025
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1198": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2025
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1199": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2025
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1200": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2025
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1201": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2025
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1202": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2037
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x4c1"
    },
    "1205": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2037
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1206": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2030,
        2036
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1207": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2037
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xffffffff"
    },
    "1212": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2029
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x6cc"
    },
    "1215": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2037
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1216": {
      "fn": "MockDai.transferFrom",
      "jump": "i",
      "offset": [
        1999,
        2037
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1217": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1999,
        2037
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "op": "SUB"
    },
    "1226": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1227": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "DUP7",
      "path": "contracts/MockDai.sol"
    },
    "1228": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1229": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1231": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1232": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1233": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1234": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1977
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x5"
    },
    "1236": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1238": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1239": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1240": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1241": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1243": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1244": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1245": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1984
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1246": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1985,
        1995
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol"
    },
    "1247": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1996
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1248": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1996
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1249": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1996
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1250": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1996
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1251": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1996
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1252": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1996
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1253": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        1996
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1254": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        2037
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1255": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        2037
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1256": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        2037
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1257": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1970,
        2037
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1258": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2076
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol",
      "statement": 7
    },
    "1259": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2076
      ],
      "op": "DUP7",
      "path": "contracts/MockDai.sol"
    },
    "1260": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2076
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1261": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2076
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1262": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2076
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1263": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2071
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1265": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2076
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1266": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2076
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1267": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2076
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1268": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2076
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1269": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2076
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1270": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2088
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x505"
    },
    "1273": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2088
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1274": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2087
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1275": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2088
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xffffffff"
    },
    "1280": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2080
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x715"
    },
    "1283": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2088
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1284": {
      "fn": "MockDai.transferFrom",
      "jump": "i",
      "offset": [
        2063,
        2088
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1285": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2063,
        2088
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1292": {
      "op": "SHL"
    },
    "1293": {
      "op": "SUB"
    },
    "1294": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1295": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "1296": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1297": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1299": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1300": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1301": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1302": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2055
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1304": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1306": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1307": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1308": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1309": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1311": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1312": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1313": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1314": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2060
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1315": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2088
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1316": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2088
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1317": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2088
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1318": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2047,
        2088
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1319": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol",
      "statement": 8
    },
    "1320": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1321": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1322": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "DUP9",
      "path": "contracts/MockDai.sol"
    },
    "1323": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1324": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1325": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1326": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1327": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1328": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1329": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1330": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1331": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1332": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1333": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1334": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1335": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1336": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1337": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1338": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "PUSH32",
      "path": "contracts/MockDai.sol",
      "value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    "1371": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1372": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1373": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1374": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "1375": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x60"
    },
    "1377": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1378": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1379": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2103,
        2131
      ],
      "op": "LOG1",
      "path": "contracts/MockDai.sol"
    },
    "1380": {
      "op": "POP"
    },
    "1381": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2148,
        2152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "statement": 9,
      "value": "0x1"
    },
    "1383": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1384": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1385": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "1386": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "1387": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1736,
        2159
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "1388": {
      "fn": "MockDai.transferFrom",
      "jump": "o",
      "offset": [
        1736,
        2159
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1389": {
      "offset": [
        158,
        181
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1390": {
      "offset": [
        158,
        181
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x2"
    },
    "1392": {
      "offset": [
        158,
        181
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1393": {
      "offset": [
        158,
        181
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1394": {
      "jump": "o",
      "offset": [
        158,
        181
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1395": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1012,
        1117
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "op": "SUB"
    },
    "1404": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol",
      "statement": 10
    },
    "1405": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1068,
        1075
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1407": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1408": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1409": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1410": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1102
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1412": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1414": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1415": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1417": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1418": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1419": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1420": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1094,
        1110
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1421": {
      "fn": "MockDai.balanceOf",
      "jump": "o",
      "offset": [
        1012,
        1117
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1422": {
      "offset": [
        108,
        128
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1423": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1425": {
      "offset": [
        108,
        128
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1426": {
      "offset": [
        108,
        128
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1427": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1429": {
      "offset": [
        108,
        128
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1430": {
      "offset": [
        108,
        128
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1431": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1433": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x2"
    },
    "1435": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1"
    },
    "1437": {
      "offset": [
        108,
        128
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "1438": {
      "offset": [
        108,
        128
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1439": {
      "offset": [
        108,
        128
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "1440": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x100"
    },
    "1443": {
      "offset": [
        108,
        128
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1446": {
      "op": "NOT"
    },
    "1447": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1448": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1449": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1450": {
      "offset": [
        108,
        128
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1451": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1452": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1453": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1454": {
      "offset": [
        108,
        128
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "1455": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "1457": {
      "offset": [
        108,
        128
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1458": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1459": {
      "offset": [
        108,
        128
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1460": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1461": {
      "offset": [
        108,
        128
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "1462": {
      "offset": [
        108,
        128
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1463": {
      "offset": [
        108,
        128
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "1464": {
      "offset": [
        108,
        128
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1465": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1466": {
      "offset": [
        108,
        128
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1467": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1468": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1469": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1470": {
      "offset": [
        108,
        128
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1471": {
      "offset": [
        108,
        128
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1472": {
      "offset": [
        108,
        128
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1473": {
      "offset": [
        108,
        128
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1474": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1475": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1476": {
      "offset": [
        108,
        128
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1477": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1478": {
      "offset": [
        108,
        128
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1479": {
      "offset": [
        108,
        128
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1480": {
      "offset": [
        108,
        128
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1481": {
      "offset": [
        108,
        128
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "1482": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x36a"
    },
    "1485": {
      "offset": [
        108,
        128
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "1486": {
      "offset": [
        108,
        128
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1487": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "1489": {
      "offset": [
        108,
        128
      ],
      "op": "LT",
      "path": "contracts/MockDai.sol"
    },
    "1490": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x33f"
    },
    "1493": {
      "offset": [
        108,
        128
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "1494": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x100"
    },
    "1497": {
      "offset": [
        108,
        128
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1498": {
      "offset": [
        108,
        128
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1499": {
      "offset": [
        108,
        128
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1500": {
      "offset": [
        108,
        128
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "1501": {
      "offset": [
        108,
        128
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "1502": {
      "offset": [
        108,
        128
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1503": {
      "offset": [
        108,
        128
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1504": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1505": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1507": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1508": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1509": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x36a"
    },
    "1512": {
      "offset": [
        108,
        128
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1513": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1514": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1590
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol",
      "statement": 11
    },
    "1515": {
      "fn": "MockDai.transfer",
      "offset": [
        1532,
        1536
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1517": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1591
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1518": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1591
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1519": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1591
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1520": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1579
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1522": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1591
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1524": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1591
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1525": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1591
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1527": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1591
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1528": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1591
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1529": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1591
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1530": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1603
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x609"
    },
    "1533": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1603
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1534": {
      "fn": "MockDai.transfer",
      "offset": [
        1596,
        1602
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1535": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1603
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xffffffff"
    },
    "1540": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1595
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x6cc"
    },
    "1543": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1603
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1544": {
      "fn": "MockDai.transfer",
      "jump": "i",
      "offset": [
        1571,
        1603
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1545": {
      "fn": "MockDai.transfer",
      "offset": [
        1571,
        1603
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1546": {
      "fn": "MockDai.transfer",
      "offset": [
        1557,
        1567
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol"
    },
    "1547": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1568
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1549": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1568
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1550": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1568
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1551": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1568
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1552": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1556
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1554": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1568
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1556": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1568
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1557": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1568
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1559": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1568
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1560": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1568
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1561": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1568
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1562": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1603
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1563": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1603
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1564": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1603
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1565": {
      "fn": "MockDai.transfer",
      "offset": [
        1548,
        1603
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "SUB"
    },
    "1574": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1642
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol",
      "statement": 12
    },
    "1575": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1642
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1576": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1642
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1577": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1642
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1578": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1642
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1579": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1642
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1580": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1654
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x63b"
    },
    "1583": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1654
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1584": {
      "fn": "MockDai.transfer",
      "offset": [
        1647,
        1653
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1585": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1654
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xffffffff"
    },
    "1590": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1646
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x715"
    },
    "1593": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1654
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1594": {
      "fn": "MockDai.transfer",
      "jump": "i",
      "offset": [
        1629,
        1654
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1595": {
      "fn": "MockDai.transfer",
      "offset": [
        1629,
        1654
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1602": {
      "op": "SHL"
    },
    "1603": {
      "op": "SUB"
    },
    "1604": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1605": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1606": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1608": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1609": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1610": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1611": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1621
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1613": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1615": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1616": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1617": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1618": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1620": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1621": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1622": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1623": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1626
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1624": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1625": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1626": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1627": {
      "fn": "MockDai.transfer",
      "offset": [
        1613,
        1654
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1628": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol",
      "statement": 13
    },
    "1629": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1630": {
      "fn": "MockDai.transfer",
      "offset": [
        1678,
        1688
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol"
    },
    "1631": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1632": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1633": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1634": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1635": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1636": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1637": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1638": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1639": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1640": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1641": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1642": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1643": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1644": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1645": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1646": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1647": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "PUSH32",
      "path": "contracts/MockDai.sol",
      "value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    "1680": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1681": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1682": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1683": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "1684": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x60"
    },
    "1686": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1687": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1688": {
      "fn": "MockDai.transfer",
      "offset": [
        1669,
        1702
      ],
      "op": "LOG1",
      "path": "contracts/MockDai.sol"
    },
    "1689": {
      "op": "POP"
    },
    "1690": {
      "fn": "MockDai.transfer",
      "offset": [
        1719,
        1723
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "statement": 14,
      "value": "0x1"
    },
    "1692": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1693": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1694": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "1695": {
      "fn": "MockDai.transfer",
      "offset": [
        1469,
        1730
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "1696": {
      "fn": "MockDai.transfer",
      "jump": "o",
      "offset": [
        1469,
        1730
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1697": {
      "fn": "MockDai.allowance",
      "offset": [
        1123,
        1255
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol",
      "statement": 15
    },
    "1707": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1708": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1709": {
      "fn": "MockDai.allowance",
      "offset": [
        1197,
        1204
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1711": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1712": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1713": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1714": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1230
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x5"
    },
    "1716": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1718": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1719": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1720": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1721": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1723": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1724": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1725": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1238
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1726": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1727": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1728": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1729": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1730": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1731": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1732": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1733": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1734": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1735": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1736": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1737": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1738": {
      "fn": "MockDai.allowance",
      "offset": [
        1223,
        1248
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1739": {
      "fn": "MockDai.allowance",
      "jump": "o",
      "offset": [
        1123,
        1255
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1740": {
      "fn": "SafeMath.sub",
      "offset": [
        176,
        300
      ],
      "op": "JUMPDEST",
      "path": "contracts/SafeMath.sol"
    },
    "1741": {
      "fn": "SafeMath.sub",
      "offset": [
        228,
        234
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x0"
    },
    "1743": {
      "fn": "SafeMath.sub",
      "offset": [
        259,
        260
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol",
      "statement": 16
    },
    "1744": {
      "fn": "SafeMath.sub",
      "offset": [
        254,
        255
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1745": {
      "fn": "SafeMath.sub",
      "offset": [
        254,
        260
      ],
      "op": "GT",
      "path": "contracts/SafeMath.sol"
    },
    "1746": {
      "branch": 20,
      "fn": "SafeMath.sub",
      "offset": [
        254,
        260
      ],
      "op": "ISZERO",
      "path": "contracts/SafeMath.sol"
    },
    "1747": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH2",
      "path": "contracts/SafeMath.sol",
      "value": "0x70f"
    },
    "1750": {
      "branch": 20,
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "JUMPI",
      "path": "contracts/SafeMath.sol"
    },
    "1751": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x40"
    },
    "1753": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP1",
      "path": "contracts/SafeMath.sol"
    },
    "1754": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MLOAD",
      "path": "contracts/SafeMath.sol"
    },
    "1755": {
      "op": "PUSH3",
      "value": "0x461bcd"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0xe5"
    },
    "1761": {
      "op": "SHL"
    },
    "1762": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1763": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1764": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x20"
    },
    "1766": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x4"
    },
    "1768": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1769": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1770": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1771": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x9"
    },
    "1773": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x24"
    },
    "1775": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1776": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1777": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1778": {
      "op": "PUSH9",
      "value": "0x556e646572666c6f77"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xb8"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x44"
    },
    "1793": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1794": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1795": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1796": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1797": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MLOAD",
      "path": "contracts/SafeMath.sol"
    },
    "1798": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1799": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1800": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1801": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "SUB",
      "path": "contracts/SafeMath.sol"
    },
    "1802": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x64"
    },
    "1804": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1805": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1806": {
      "dev": "",
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "REVERT",
      "path": "contracts/SafeMath.sol"
    },
    "1807": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "JUMPDEST",
      "path": "contracts/SafeMath.sol"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "fn": "SafeMath.sub",
      "offset": [
        288,
        293
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol",
      "statement": 17
    },
    "1810": {
      "fn": "SafeMath.sub",
      "offset": [
        288,
        293
      ],
      "op": "SUB",
      "path": "contracts/SafeMath.sol"
    },
    "1811": {
      "fn": "SafeMath.sub",
      "offset": [
        288,
        293
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1812": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        176,
        300
      ],
      "op": "JUMP",
      "path": "contracts/SafeMath.sol"
    },
    "1813": {
      "fn": "SafeMath.add",
      "offset": [
        48,
        171
      ],
      "op": "JUMPDEST",
      "path": "contracts/SafeMath.sol"
    },
    "1814": {
      "fn": "SafeMath.add",
      "offset": [
        122,
        127
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol",
      "statement": 18
    },
    "1815": {
      "fn": "SafeMath.add",
      "offset": [
        122,
        127
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1816": {
      "fn": "SafeMath.add",
      "offset": [
        122,
        127
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1817": {
      "fn": "SafeMath.add",
      "offset": [
        145,
        151
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol",
      "statement": 19
    },
    "1818": {
      "fn": "SafeMath.add",
      "offset": [
        145,
        151
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1819": {
      "fn": "SafeMath.add",
      "offset": [
        145,
        151
      ],
      "op": "LT",
      "path": "contracts/SafeMath.sol"
    },
    "1820": {
      "branch": 21,
      "fn": "SafeMath.add",
      "offset": [
        145,
        151
      ],
      "op": "ISZERO",
      "path": "contracts/SafeMath.sol"
    },
    "1821": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH2",
      "path": "contracts/SafeMath.sol",
      "value": "0x3de"
    },
    "1824": {
      "branch": 21,
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "JUMPI",
      "path": "contracts/SafeMath.sol"
    },
    "1825": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x40"
    },
    "1827": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP1",
      "path": "contracts/SafeMath.sol"
    },
    "1828": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MLOAD",
      "path": "contracts/SafeMath.sol"
    },
    "1829": {
      "op": "PUSH3",
      "value": "0x461bcd"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0xe5"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1837": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1838": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x20"
    },
    "1840": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x4"
    },
    "1842": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1843": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1844": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1845": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x8"
    },
    "1847": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x24"
    },
    "1849": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1850": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1851": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1852": {
      "op": "PUSH8",
      "value": "0x4f766572666c6f77"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0xc0"
    },
    "1863": {
      "op": "SHL"
    },
    "1864": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x44"
    },
    "1866": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1867": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1868": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1869": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1870": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MLOAD",
      "path": "contracts/SafeMath.sol"
    },
    "1871": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1872": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1873": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1874": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "SUB",
      "path": "contracts/SafeMath.sol"
    },
    "1875": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x64"
    },
    "1877": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1878": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1879": {
      "dev": "",
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "REVERT",
      "path": "contracts/SafeMath.sol"
    }
  },
  "sha1": "7755ce64c4bc51c133e4afccd1c280c1e04d33f8",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./SafeMath.sol\";\n\ncontract MockDai {\n\n    using SafeMath for uint256;\n\n    string public symbol;\n    string public name;\n    uint256 public decimals;\n    uint256 public totalSupply;\n\n    mapping(address => uint256) balances;\n    mapping(address => mapping(address => uint256)) allowed;\n\n    event Transfer(address from, address to, uint256 value);\n    event Approval(address owner, address spender, uint256 value);\n    event Mint(address minter, uint256 value);\n    event Burn(address burner, uint256 value);\n\n    constructor(\n        string memory _symbol,\n        string memory _name,\n        uint256 _decimals,\n        uint256 _totalSupply\n    ) public {\n        symbol = _symbol;\n        name = _name;\n        decimals = _decimals;\n        totalSupply = _totalSupply;\n        balances[msg.sender] = _totalSupply;\n        emit Transfer(address(0), msg.sender, _totalSupply);\n    }\n\n    function () external payable {\n        revert(\"This contract is not payable\");\n    }\n\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(allowed[_from][msg.sender] >= _value, \"Insufficient allowance\");\n        balances[_from] = balances[_from].sub(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n}\n",
  "sourceMap": "51:2111:1:-;;;547:369;8:9:-1;5:2;;;30:1;27;20:12;5:2;547:369:1;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;547:369:1;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;547:369:1;;420:4:-1;411:14;;;;547:369:1;;;;;411:14:-1;547:369:1;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;547:369:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;547:369:1;;420:4:-1;411:14;;;;547:369:1;;;;;411:14:-1;547:369:1;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;547:369:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;547:369:1;;;;;;;;;;;;;;699:16;;547:369;;-1:-1:-1;547:369:1;-1:-1:-1;699:16:1;;:6;;:16;;;;:::i;:::-;-1:-1:-1;725:12:1;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;747:8:1;:20;;;777:11;:26;;;822:10;-1:-1:-1;813:20:1;;;:8;:20;;;;;;;;:35;;;863:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;547:369;;;;51:2111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;51:2111:1;;;-1:-1:-1;51:2111:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/MockDai.sol",
  "type": "contract"
}