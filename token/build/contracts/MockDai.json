{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    }
  ],
  "allSourcePaths": [
    "contracts/MockDai.sol",
    "contracts/SafeMath.sol"
  ],
  "ast": {
    "absolutePath": "contracts/MockDai.sol",
    "exportedSymbols": {
      "MockDai": [
        772
      ]
    },
    "id": 773,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 500,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 501,
        "nodeType": "ImportDirective",
        "scope": 773,
        "sourceUnit": 874,
        "src": "25:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 772,
        "linearizedBaseContracts": [
          772
        ],
        "name": "MockDai",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 504,
            "libraryName": {
              "contractScope": null,
              "id": 502,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 873,
              "src": "81:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$873",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "75:27:1",
            "typeName": {
              "id": 503,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "94:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 506,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "108:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 505,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "108:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 508,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "134:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 507,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "134:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 510,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "158:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 509,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "158:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 512,
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "187:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 511,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "187:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 516,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "220:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 515,
              "keyType": {
                "id": 513,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "228:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "220:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 514,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "239:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 522,
            "name": "allowed",
            "nodeType": "VariableDeclaration",
            "scope": 772,
            "src": "262:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 521,
              "keyType": {
                "id": 517,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "270:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "262:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 520,
                "keyType": {
                  "id": 518,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "289:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "281:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 519,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "300:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 530,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "indexed": false,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "339:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 526,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "353:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 528,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "365:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "338:41:1"
            },
            "src": "324:56:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 538,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "indexed": false,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "400:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "indexed": false,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "415:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "432:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "399:47:1"
            },
            "src": "385:62:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 544,
            "name": "Mint",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "indexed": false,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "463:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 542,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "479:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:31:1"
            },
            "src": "452:42:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 550,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "indexed": false,
                  "name": "burner",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "510:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "526:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "509:31:1"
            },
            "src": "499:42:1"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "701:227:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 561,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "711:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "720:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "711:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "711:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 565,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "737:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 566,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "744:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "737:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "737:12:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 569,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "759:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 570,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "770:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "759:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "759:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 573,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "789:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 574,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "803:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "789:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "789:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 577,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "825:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 580,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 578,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "834:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "834:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "825:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 581,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "848:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "825:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "825:35:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "892:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "884:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "884:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "896:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "896:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 590,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 558,
                        "src": "908:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 584,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "875:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "EmitStatement",
                  "src": "870:51:1"
                }
              ]
            },
            "documentation": null,
            "id": 594,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "568:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 554,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "599:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 556,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "628:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 558,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "655:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "558:123:1"
            },
            "returnParameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:0:1"
            },
            "scope": 772,
            "src": "547:381:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "963:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 597,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        893,
                        894
                      ],
                      "referencedDeclaration": 893,
                      "src": "973:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "973:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "973:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 601,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:2:1"
            },
            "returnParameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "963:0:1"
            },
            "scope": 772,
            "src": "934:54:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "1059:40:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 608,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "1076:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 610,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 609,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "1085:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1076:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 607,
                  "id": 611,
                  "nodeType": "Return",
                  "src": "1069:23:1"
                }
              ]
            },
            "documentation": null,
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "1013:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:16:1"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "1050:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1049:9:1"
            },
            "scope": 772,
            "src": "994:105:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "1238:49:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 622,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "1255:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 624,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 623,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "1263:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1255:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 626,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 625,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "1271:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1255:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 621,
                  "id": 627,
                  "nodeType": "Return",
                  "src": "1248:32:1"
                }
              ]
            },
            "documentation": null,
            "id": 629,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 615,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "1133:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 617,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "1157:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1123:56:1"
            },
            "returnParameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "1225:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1224:9:1"
            },
            "scope": 772,
            "src": "1105:182:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "1366:129:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 638,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1376:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 642,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 639,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "1384:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1384:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1376:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 643,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 641,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "1396:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1376:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 644,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "1408:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1376:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:38:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 648,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "1438:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1438:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "1450:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "1460:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 647,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "1429:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 653,
                  "nodeType": "EmitStatement",
                  "src": "1424:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1484:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 637,
                  "id": 655,
                  "nodeType": "Return",
                  "src": "1477:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "1310:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "1328:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1309:34:1"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "1360:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1359:6:1"
            },
            "scope": 772,
            "src": "1293:202:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 699,
              "nodeType": "Block",
              "src": "1570:192:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 666,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "1580:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 669,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 667,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "1589:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1589:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1580:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 675,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 661,
                          "src": "1628:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 670,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "1603:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 673,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 671,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "1612:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1612:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1603:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 820,
                        "src": "1603:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1603:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1580:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "1580:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 679,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "1645:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 681,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 680,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "1654:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1645:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 661,
                          "src": "1679:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 682,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "1661:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 684,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 683,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 659,
                            "src": "1670:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1661:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 797,
                        "src": "1661:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1661:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1645:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "1645:41:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 691,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "1710:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1710:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 693,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "1722:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 694,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 661,
                        "src": "1727:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 690,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "1701:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1701:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "EmitStatement",
                  "src": "1696:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1751:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 665,
                  "id": 698,
                  "nodeType": "Return",
                  "src": "1744:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "1519:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 661,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "1532:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1518:29:1"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "1564:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1563:6:1"
            },
            "scope": 772,
            "src": "1501:261:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 770,
              "nodeType": "Block",
              "src": "1906:335:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 712,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "1924:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 714,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 713,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 702,
                              "src": "1932:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1924:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 717,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 715,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "1939:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1939:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1924:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 718,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 706,
                          "src": "1954:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1924:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1962:24:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        891,
                        892
                      ],
                      "referencedDeclaration": 892,
                      "src": "1916:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1916:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "1916:71:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 723,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "1997:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 725,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 724,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "2006:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1997:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 730,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 706,
                          "src": "2035:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 726,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "2015:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 728,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 727,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "2024:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2015:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 820,
                        "src": "2015:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2015:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1997:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 734,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "2052:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 738,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 735,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 702,
                          "src": "2060:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2052:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 739,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 736,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "2067:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2067:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2052:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 747,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 706,
                          "src": "2112:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 740,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "2081:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 742,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 741,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 702,
                              "src": "2089:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2081:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 745,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 743,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "2096:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2096:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2081:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 820,
                        "src": "2081:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2081:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2052:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:67:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "2129:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 753,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "2138:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2129:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 758,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 706,
                          "src": "2163:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 754,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "2145:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 756,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 755,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 704,
                            "src": "2154:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2145:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 797,
                        "src": "2145:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2145:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2129:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "2129:41:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 763,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "2194:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 764,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "2201:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 765,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "2206:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 762,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "2185:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2185:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "EmitStatement",
                  "src": "2180:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2230:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 710,
                  "id": 769,
                  "nodeType": "Return",
                  "src": "2223:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 771,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "1799:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 704,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "1822:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 706,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "1843:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1843:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1789:74:1"
            },
            "returnParameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "1896:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1895:6:1"
            },
            "scope": 772,
            "src": "1768:473:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 773,
        "src": "51:2193:1"
      }
    ],
    "src": "0:2245:1"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610a19380380610a198339818101604052608081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156100ff57600080fd5b90830190602082018581111561011457600080fd5b825164010000000081118282018810171561012e57600080fd5b82525081516020918201929091019080838360005b8381101561015b578181015183820152602001610143565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b5060409081526020828101519290910151865192945092506101af9160009187019061022a565b5082516101c390600190602086019061022a565b506002829055600381905533600081815260046020908152604080832085905580519283529082019290925280820183905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1505050506102c5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061026b57805160ff1916838001178555610298565b82800160010185558215610298579182015b8281111561029857825182559160200191906001019061027d565b506102a49291506102a8565b5090565b6102c291905b808211156102a457600081556001016102ae565b90565b610745806102d46000396000f3fe6080604052600436106100865760003560e01c8063313ce56711610059578063313ce567146101cc57806370a08231146101e157806395d89b4114610214578063a9059cbb14610229578063dd62ed3e1461026257610086565b806306fdde031461008b578063095ea7b31461011557806318160ddd1461016257806323b872dd14610189575b600080fd5b34801561009757600080fd5b506100a061029d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100da5781810151838201526020016100c2565b50505050905090810190601f1680156101075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012157600080fd5b5061014e6004803603604081101561013857600080fd5b506001600160a01b03813516906020013561032a565b604080519115158252519081900360200190f35b34801561016e57600080fd5b5061017761039c565b60408051918252519081900360200190f35b34801561019557600080fd5b5061014e600480360360608110156101ac57600080fd5b506001600160a01b038135811691602081013590911690604001356103a2565b3480156101d857600080fd5b50610177610525565b3480156101ed57600080fd5b506101776004803603602081101561020457600080fd5b50356001600160a01b031661052b565b34801561022057600080fd5b506100a0610546565b34801561023557600080fd5b5061014e6004803603604081101561024c57600080fd5b506001600160a01b0381351690602001356105a1565b34801561026e57600080fd5b506101776004803603604081101561028557600080fd5b506001600160a01b0381358116916020013516610659565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103225780601f106102f757610100808354040283529160200191610322565b820191906000526020600020905b81548152906001019060200180831161030557829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528281018490525190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925919081900360600190a15060015b92915050565b60035481565b6001600160a01b0383166000908152600560209081526040808320338452909152812054821115610413576040805162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015290519081900360640190fd5b6001600160a01b03841660009081526004602052604090205461043c908363ffffffff61068416565b6001600160a01b0385166000908152600460209081526040808320939093556005815282822033835290522054610479908363ffffffff61068416565b6001600160a01b0380861660009081526005602090815260408083203384528252808320949094559186168152600490915220546104bd908363ffffffff6106cd16565b6001600160a01b0380851660008181526004602090815260409182902094909455805192881683529282015280820184905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a15060019392505050565b60025481565b6001600160a01b031660009081526004602052604090205490565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103225780601f106102f757610100808354040283529160200191610322565b336000908152600460205260408120546105c1908363ffffffff61068416565b33600090815260046020526040808220929092556001600160a01b038516815220546105f3908363ffffffff6106cd16565b6001600160a01b03841660008181526004602090815260409182902093909355805133815292830191909152818101849052517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a150600192915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6000828211156106c7576040805162461bcd60e51b8152602060048201526009602482015268556e646572666c6f7760b81b604482015290519081900360640190fd5b50900390565b81810182811015610396576040805162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b604482015290519081900360640190fdfea265627a7a72315820b8d0bd36b80d9aed6d7e9afcae0ba254c90d3afdea025b9ca41015dccccb8e4e64736f6c634300050b0032",
  "bytecodeSha1": "2dcf9d565b66ce63d83938da2be70789c22797af",
  "compiler": {
    "evm_version": "petersburg",
    "minify_source": false,
    "optimize": true,
    "runs": 200,
    "version": "Version: 0.5.11+commit.22be8592.Darwin.appleclang"
  },
  "contractName": "MockDai",
  "coverageMap": {
    "branches": {
      "contracts/MockDai.sol": {
        "MockDai.transferFrom": {
          "20": [
            1924,
            1960,
            true
          ]
        }
      },
      "contracts/SafeMath.sol": {
        "SafeMath.add": {
          "22": [
            145,
            151,
            true
          ]
        },
        "SafeMath.sub": {
          "21": [
            254,
            260,
            true
          ]
        }
      }
    },
    "statements": {
      "contracts/MockDai.sol": {
        "MockDai.<fallback>": {
          "0": [
            973,
            981
          ]
        },
        "MockDai.allowance": {
          "15": [
            1248,
            1280
          ]
        },
        "MockDai.approve": {
          "1": [
            1376,
            1414
          ],
          "2": [
            1424,
            1467
          ],
          "3": [
            1477,
            1488
          ]
        },
        "MockDai.balanceOf": {
          "10": [
            1069,
            1092
          ]
        },
        "MockDai.transfer": {
          "11": [
            1580,
            1635
          ],
          "12": [
            1645,
            1686
          ],
          "13": [
            1696,
            1734
          ],
          "14": [
            1744,
            1755
          ]
        },
        "MockDai.transferFrom": {
          "4": [
            1916,
            1987
          ],
          "5": [
            1997,
            2042
          ],
          "6": [
            2052,
            2119
          ],
          "7": [
            2129,
            2170
          ],
          "8": [
            2180,
            2213
          ],
          "9": [
            2223,
            2234
          ]
        }
      },
      "contracts/SafeMath.sol": {
        "SafeMath.add": {
          "18": [
            118,
            127
          ],
          "19": [
            137,
            164
          ]
        },
        "SafeMath.sub": {
          "16": [
            246,
            274
          ],
          "17": [
            284,
            293
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "6080604052600436106100865760003560e01c8063313ce56711610059578063313ce567146101cc57806370a08231146101e157806395d89b4114610214578063a9059cbb14610229578063dd62ed3e1461026257610086565b806306fdde031461008b578063095ea7b31461011557806318160ddd1461016257806323b872dd14610189575b600080fd5b34801561009757600080fd5b506100a061029d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100da5781810151838201526020016100c2565b50505050905090810190601f1680156101075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012157600080fd5b5061014e6004803603604081101561013857600080fd5b506001600160a01b03813516906020013561032a565b604080519115158252519081900360200190f35b34801561016e57600080fd5b5061017761039c565b60408051918252519081900360200190f35b34801561019557600080fd5b5061014e600480360360608110156101ac57600080fd5b506001600160a01b038135811691602081013590911690604001356103a2565b3480156101d857600080fd5b50610177610525565b3480156101ed57600080fd5b506101776004803603602081101561020457600080fd5b50356001600160a01b031661052b565b34801561022057600080fd5b506100a0610546565b34801561023557600080fd5b5061014e6004803603604081101561024c57600080fd5b506001600160a01b0381351690602001356105a1565b34801561026e57600080fd5b506101776004803603604081101561028557600080fd5b506001600160a01b0381358116916020013516610659565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103225780601f106102f757610100808354040283529160200191610322565b820191906000526020600020905b81548152906001019060200180831161030557829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528281018490525190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925919081900360600190a15060015b92915050565b60035481565b6001600160a01b0383166000908152600560209081526040808320338452909152812054821115610413576040805162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015290519081900360640190fd5b6001600160a01b03841660009081526004602052604090205461043c908363ffffffff61068416565b6001600160a01b0385166000908152600460209081526040808320939093556005815282822033835290522054610479908363ffffffff61068416565b6001600160a01b0380861660009081526005602090815260408083203384528252808320949094559186168152600490915220546104bd908363ffffffff6106cd16565b6001600160a01b0380851660008181526004602090815260409182902094909455805192881683529282015280820184905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a15060019392505050565b60025481565b6001600160a01b031660009081526004602052604090205490565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103225780601f106102f757610100808354040283529160200191610322565b336000908152600460205260408120546105c1908363ffffffff61068416565b33600090815260046020526040808220929092556001600160a01b038516815220546105f3908363ffffffff6106cd16565b6001600160a01b03841660008181526004602090815260409182902093909355805133815292830191909152818101849052517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a150600192915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6000828211156106c7576040805162461bcd60e51b8152602060048201526009602482015268556e646572666c6f7760b81b604482015290519081900360640190fd5b50900390565b81810182811015610396576040805162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b604482015290519081900360640190fdfea265627a7a72315820b8d0bd36b80d9aed6d7e9afcae0ba254c90d3afdea025b9ca41015dccccb8e4e64736f6c634300050b0032",
  "deployedSourceMap": "51:2193:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;973:8;;;134:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;134:18:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;134:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1293:202:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1293:202:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;187:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;187:26:1;;;:::i;:::-;;;;;;;;;;;;;;;;1768:473;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1768:473:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1768:473:1;;;;;;;;;;;;;;;;;:::i;158:23::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;158:23:1;;;:::i;994:105::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;994:105:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;994:105:1;-1:-1:-1;;;;;994:105:1;;:::i;108:20::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;108:20:1;;;:::i;1501:261::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1501:261:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1501:261:1;;;;;;;;:::i;1105:182::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1105:182:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1105:182:1;;;;;;;;;;:::i;134:18::-;;;;;;;;;;;;;;;-1:-1:-1;;134:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1293:202::-;1384:10;1360:4;1376:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1376:29:1;;;;;;;;;;;:38;;;1429;;;;;;;;;;;;;;;;;;;1360:4;;1429:38;;;;;;;;;;-1:-1:-1;1484:4:1;1293:202;;;;;:::o;187:26::-;;;;:::o;1768:473::-;-1:-1:-1;;;;;1924:14:1;;1896:4;1924:14;;;:7;:14;;;;;;;;1939:10;1924:26;;;;;;;;:36;-1:-1:-1;1924:36:1;1916:71;;;;;-1:-1:-1;;;1916:71:1;;;;;;;;;;;;-1:-1:-1;;;1916:71:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;2015:15:1;;;;;;:8;:15;;;;;;:27;;2035:6;2015:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;1997:15:1;;;;;;:8;:15;;;;;;;;:45;;;;2081:7;:14;;;;;2096:10;2081:26;;;;;;:38;;2112:6;2081:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;2052:14:1;;;;;;;:7;:14;;;;;;;;2067:10;2052:26;;;;;;;:67;;;;2145:13;;;;;:8;:13;;;;;:25;;2163:6;2145:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;2129:13:1;;;;;;;:8;:13;;;;;;;;;:41;;;;2185:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2230:4:1;1768:473;;;;;:::o;158:23::-;;;;:::o;994:105::-;-1:-1:-1;;;;;1076:16:1;1050:7;1076:16;;;:8;:16;;;;;;;994:105::o;108:20::-;;;;;;;;;;;;;;;-1:-1:-1;;108:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:261;1612:10;1564:4;1603:20;;;:8;:20;;;;;;:32;;1628:6;1603:32;:24;:32;:::i;:::-;1589:10;1580:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;1661:13:1;;;;;;:25;;1679:6;1661:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1645:13:1;;;;;;:8;:13;;;;;;;;;:41;;;;1701:33;;1710:10;1701:33;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1751:4:1;1501:261;;;;:::o;1105:182::-;-1:-1:-1;;;;;1255:15:1;;;1225:7;1255:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;1105:182::o;176:124:2:-;228:6;259:1;254;:6;;246:28;;;;;-1:-1:-1;;;246:28:2;;;;;;;;;;;;-1:-1:-1;;;246:28:2;;;;;;;;;;;;;;;-1:-1:-1;288:5:2;;;176:124::o;48:123::-;122:5;;;145:6;;;;137:27;;;;;-1:-1:-1;;;137:27:2;;;;;;;;;;;;-1:-1:-1;;;137:27:2;;;;;;;;;;;;;",
  "offset": [
    51,
    2244
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xe0 SHR DUP1 PUSH4 0x313ce567 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x313ce567 EQ PUSH2 0x1cc JUMPI DUP1 PUSH4 0x70a08231 EQ PUSH2 0x1e1 JUMPI DUP1 PUSH4 0x95d89b41 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xa9059cbb EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xdd62ed3e EQ PUSH2 0x262 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x6fdde03 EQ PUSH2 0x8b JUMPI DUP1 PUSH4 0x95ea7b3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160ddd EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x23b872dd EQ PUSH2 0x189 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xa0 PUSH2 0x29d JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xda JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xc2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1f AND DUP1 ISZERO PUSH2 0x107 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14e PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x32a JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16e JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x39c JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14e PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1ac JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3a2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1d8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x525 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ed JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB AND PUSH2 0x52b JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xa0 PUSH2 0x546 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14e PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x24c JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5a1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26e JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x659 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 DUP5 DUP7 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1f DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x322 JUMPI DUP1 PUSH1 0x1f LT PUSH2 0x2f7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x322 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x305 JUMPI DUP3 SWAP1 SUB PUSH1 0x1f AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 DUP2 ADD DUP5 SWAP1 MSTORE MLOAD SWAP1 SWAP2 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x413 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496e73756666696369656e7420616c6c6f77616e6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x43c SWAP1 DUP4 PUSH4 0xffffffff PUSH2 0x684 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x479 SWAP1 DUP4 PUSH4 0xffffffff PUSH2 0x684 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x4bd SWAP1 DUP4 PUSH4 0xffffffff PUSH2 0x6cd AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD SWAP3 DUP9 AND DUP4 MSTORE SWAP3 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1f DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x322 JUMPI DUP1 PUSH1 0x1f LT PUSH2 0x2f7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x322 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5c1 SWAP1 DUP4 PUSH4 0xffffffff PUSH2 0x684 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5f3 SWAP1 DUP4 PUSH4 0xffffffff PUSH2 0x6cd AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD CALLER DUP2 MSTORE SWAP3 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP2 ADD DUP5 SWAP1 MSTORE MLOAD PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x6c7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x556e646572666c6f77 PUSH1 0xb8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x396 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x4f766572666c6f77 PUSH1 0xc0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627a7a723158 KECCAK256 0xb8 0xd0 0xbd CALLDATASIZE 0xb8 0xd SWAP11 0xed PUSH14 0x7e9afcae0ba254c90d3afdea025b SWAP13 LOG4 LT ISZERO 0xdc 0xcc 0xcb DUP15 0x4e PUSH5 0x736f6c6343 STOP SDIV SIGNEXTEND STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x80"
    },
    "2": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "4": {
      "offset": [
        51,
        2244
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "5": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "7": {
      "offset": [
        51,
        2244
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "8": {
      "offset": [
        51,
        2244
      ],
      "op": "LT",
      "path": "contracts/MockDai.sol"
    },
    "9": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x86"
    },
    "12": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "13": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "15": {
      "offset": [
        51,
        2244
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "16": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0xe0"
    },
    "18": {
      "offset": [
        51,
        2244
      ],
      "op": "SHR",
      "path": "contracts/MockDai.sol"
    },
    "19": {
      "offset": [
        51,
        2244
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "20": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x313ce567"
    },
    "25": {
      "offset": [
        51,
        2244
      ],
      "op": "GT",
      "path": "contracts/MockDai.sol"
    },
    "26": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x59"
    },
    "29": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "30": {
      "offset": [
        51,
        2244
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "31": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x313ce567"
    },
    "36": {
      "offset": [
        51,
        2244
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "37": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x1cc"
    },
    "40": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "41": {
      "offset": [
        51,
        2244
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "42": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x70a08231"
    },
    "47": {
      "offset": [
        51,
        2244
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "48": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x1e1"
    },
    "51": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "52": {
      "offset": [
        51,
        2244
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "53": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x95d89b41"
    },
    "58": {
      "offset": [
        51,
        2244
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "59": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x214"
    },
    "62": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "63": {
      "offset": [
        51,
        2244
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "64": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xa9059cbb"
    },
    "69": {
      "offset": [
        51,
        2244
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "70": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x229"
    },
    "73": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "74": {
      "offset": [
        51,
        2244
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "75": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xdd62ed3e"
    },
    "80": {
      "offset": [
        51,
        2244
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "81": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x262"
    },
    "84": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "85": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x86"
    },
    "88": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "89": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "90": {
      "offset": [
        51,
        2244
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "91": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x6fdde03"
    },
    "96": {
      "offset": [
        51,
        2244
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "97": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x8b"
    },
    "100": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "101": {
      "offset": [
        51,
        2244
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "102": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x95ea7b3"
    },
    "107": {
      "offset": [
        51,
        2244
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "108": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x115"
    },
    "111": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "112": {
      "offset": [
        51,
        2244
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "113": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x18160ddd"
    },
    "118": {
      "offset": [
        51,
        2244
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "119": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x162"
    },
    "122": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "123": {
      "offset": [
        51,
        2244
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "124": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0x23b872dd"
    },
    "129": {
      "offset": [
        51,
        2244
      ],
      "op": "EQ",
      "path": "contracts/MockDai.sol"
    },
    "130": {
      "offset": [
        51,
        2244
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x189"
    },
    "133": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "134": {
      "offset": [
        51,
        2244
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "135": {
      "fn": "MockDai.<fallback>",
      "offset": [
        973,
        981
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "statement": 0,
      "value": "0x0"
    },
    "137": {
      "fn": "MockDai.<fallback>",
      "offset": [
        973,
        981
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "138": {
      "dev": "",
      "fn": "MockDai.<fallback>",
      "offset": [
        973,
        981
      ],
      "op": "REVERT",
      "path": "contracts/MockDai.sol"
    },
    "139": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "140": {
      "offset": [
        134,
        152
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "141": {
      "op": "DUP1"
    },
    "142": {
      "op": "ISZERO"
    },
    "143": {
      "op": "PUSH2",
      "value": "0x97"
    },
    "146": {
      "op": "JUMPI"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "149": {
      "op": "DUP1"
    },
    "150": {
      "op": "REVERT"
    },
    "151": {
      "op": "JUMPDEST"
    },
    "152": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "153": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0xa0"
    },
    "156": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x29d"
    },
    "159": {
      "jump": "i",
      "offset": [
        134,
        152
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "160": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "161": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "163": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "164": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "165": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "167": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "168": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "169": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "170": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "171": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "172": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "173": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "174": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "175": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "176": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "177": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "178": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "179": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "180": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "181": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "182": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "183": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "184": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "185": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "186": {
      "offset": [
        134,
        152
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "187": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "188": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "189": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "190": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "191": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "192": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "194": {
      "op": "JUMPDEST"
    },
    "195": {
      "op": "DUP4"
    },
    "196": {
      "op": "DUP2"
    },
    "197": {
      "op": "LT"
    },
    "198": {
      "op": "ISZERO"
    },
    "199": {
      "op": "PUSH2",
      "value": "0xda"
    },
    "202": {
      "op": "JUMPI"
    },
    "203": {
      "op": "DUP2"
    },
    "204": {
      "op": "DUP2"
    },
    "205": {
      "op": "ADD"
    },
    "206": {
      "op": "MLOAD"
    },
    "207": {
      "op": "DUP4"
    },
    "208": {
      "op": "DUP3"
    },
    "209": {
      "op": "ADD"
    },
    "210": {
      "op": "MSTORE"
    },
    "211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "213": {
      "op": "ADD"
    },
    "214": {
      "op": "PUSH2",
      "value": "0xc2"
    },
    "217": {
      "op": "JUMP"
    },
    "218": {
      "op": "JUMPDEST"
    },
    "219": {
      "op": "POP"
    },
    "220": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "221": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "222": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "223": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "224": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "225": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "226": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "227": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "228": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "229": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "231": {
      "offset": [
        134,
        152
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "232": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "233": {
      "offset": [
        134,
        152
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "234": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x107"
    },
    "237": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "238": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "239": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "240": {
      "offset": [
        134,
        152
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "241": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "242": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "243": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1"
    },
    "245": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "246": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "248": {
      "offset": [
        134,
        152
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "249": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x100"
    },
    "252": {
      "offset": [
        134,
        152
      ],
      "op": "EXP",
      "path": "contracts/MockDai.sol"
    },
    "253": {
      "offset": [
        134,
        152
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "254": {
      "offset": [
        134,
        152
      ],
      "op": "NOT",
      "path": "contracts/MockDai.sol"
    },
    "255": {
      "offset": [
        134,
        152
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "256": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "257": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "258": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "260": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "261": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "262": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "263": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "264": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "265": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "266": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "267": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "268": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "269": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "271": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "272": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "273": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "274": {
      "offset": [
        134,
        152
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "275": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "276": {
      "offset": [
        134,
        152
      ],
      "op": "RETURN",
      "path": "contracts/MockDai.sol"
    },
    "277": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "278": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "279": {
      "op": "DUP1"
    },
    "280": {
      "op": "ISZERO"
    },
    "281": {
      "op": "PUSH2",
      "value": "0x121"
    },
    "284": {
      "op": "JUMPI"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "287": {
      "op": "DUP1"
    },
    "288": {
      "op": "REVERT"
    },
    "289": {
      "op": "JUMPDEST"
    },
    "290": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "291": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x14e"
    },
    "294": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "296": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "297": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "298": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "301": {
      "op": "DUP2"
    },
    "302": {
      "op": "LT"
    },
    "303": {
      "op": "ISZERO"
    },
    "304": {
      "op": "PUSH2",
      "value": "0x138"
    },
    "307": {
      "op": "JUMPI"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "310": {
      "op": "DUP1"
    },
    "311": {
      "op": "REVERT"
    },
    "312": {
      "op": "JUMPDEST"
    },
    "313": {
      "op": "POP"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "318": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "320": {
      "op": "SHL"
    },
    "321": {
      "op": "SUB"
    },
    "322": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "323": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "324": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "325": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "326": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "328": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "329": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "330": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x32a"
    },
    "333": {
      "fn": "MockDai.approve",
      "jump": "i",
      "offset": [
        1293,
        1495
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "334": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "335": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "337": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "338": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "339": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "340": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "341": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "342": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "343": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "344": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "345": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "346": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "347": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "348": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "349": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "351": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "352": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "353": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "RETURN",
      "path": "contracts/MockDai.sol"
    },
    "354": {
      "offset": [
        187,
        213
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "355": {
      "offset": [
        187,
        213
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "356": {
      "op": "DUP1"
    },
    "357": {
      "op": "ISZERO"
    },
    "358": {
      "op": "PUSH2",
      "value": "0x16e"
    },
    "361": {
      "op": "JUMPI"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "364": {
      "op": "DUP1"
    },
    "365": {
      "op": "REVERT"
    },
    "366": {
      "op": "JUMPDEST"
    },
    "367": {
      "offset": [
        187,
        213
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "368": {
      "offset": [
        187,
        213
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x177"
    },
    "371": {
      "offset": [
        187,
        213
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x39c"
    },
    "374": {
      "jump": "i",
      "offset": [
        187,
        213
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "375": {
      "offset": [
        187,
        213
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "376": {
      "offset": [
        187,
        213
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "378": {
      "offset": [
        187,
        213
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "379": {
      "offset": [
        187,
        213
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "380": {
      "offset": [
        187,
        213
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "381": {
      "offset": [
        187,
        213
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "382": {
      "offset": [
        187,
        213
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "383": {
      "offset": [
        187,
        213
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "384": {
      "offset": [
        187,
        213
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "385": {
      "offset": [
        187,
        213
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "386": {
      "offset": [
        187,
        213
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "387": {
      "offset": [
        187,
        213
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "388": {
      "offset": [
        187,
        213
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "390": {
      "offset": [
        187,
        213
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "391": {
      "offset": [
        187,
        213
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "392": {
      "offset": [
        187,
        213
      ],
      "op": "RETURN",
      "path": "contracts/MockDai.sol"
    },
    "393": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "394": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "395": {
      "op": "DUP1"
    },
    "396": {
      "op": "ISZERO"
    },
    "397": {
      "op": "PUSH2",
      "value": "0x195"
    },
    "400": {
      "op": "JUMPI"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "403": {
      "op": "DUP1"
    },
    "404": {
      "op": "REVERT"
    },
    "405": {
      "op": "JUMPDEST"
    },
    "406": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "407": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x14e"
    },
    "410": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "412": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "413": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "414": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "417": {
      "op": "DUP2"
    },
    "418": {
      "op": "LT"
    },
    "419": {
      "op": "ISZERO"
    },
    "420": {
      "op": "PUSH2",
      "value": "0x1ac"
    },
    "423": {
      "op": "JUMPI"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "426": {
      "op": "DUP1"
    },
    "427": {
      "op": "REVERT"
    },
    "428": {
      "op": "JUMPDEST"
    },
    "429": {
      "op": "POP"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "436": {
      "op": "SHL"
    },
    "437": {
      "op": "SUB"
    },
    "438": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "439": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "440": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "441": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "442": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "443": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "445": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "446": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "447": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "448": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "449": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "450": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "451": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "452": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "454": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "455": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "456": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x3a2"
    },
    "459": {
      "fn": "MockDai.transferFrom",
      "jump": "i",
      "offset": [
        1768,
        2241
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "460": {
      "offset": [
        158,
        181
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "461": {
      "offset": [
        158,
        181
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "462": {
      "op": "DUP1"
    },
    "463": {
      "op": "ISZERO"
    },
    "464": {
      "op": "PUSH2",
      "value": "0x1d8"
    },
    "467": {
      "op": "JUMPI"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "470": {
      "op": "DUP1"
    },
    "471": {
      "op": "REVERT"
    },
    "472": {
      "op": "JUMPDEST"
    },
    "473": {
      "offset": [
        158,
        181
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "474": {
      "offset": [
        158,
        181
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x177"
    },
    "477": {
      "offset": [
        158,
        181
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x525"
    },
    "480": {
      "jump": "i",
      "offset": [
        158,
        181
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "481": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "482": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "483": {
      "op": "DUP1"
    },
    "484": {
      "op": "ISZERO"
    },
    "485": {
      "op": "PUSH2",
      "value": "0x1ed"
    },
    "488": {
      "op": "JUMPI"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "491": {
      "op": "DUP1"
    },
    "492": {
      "op": "REVERT"
    },
    "493": {
      "op": "JUMPDEST"
    },
    "494": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "495": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x177"
    },
    "498": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "500": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "501": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "502": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "505": {
      "op": "DUP2"
    },
    "506": {
      "op": "LT"
    },
    "507": {
      "op": "ISZERO"
    },
    "508": {
      "op": "PUSH2",
      "value": "0x204"
    },
    "511": {
      "op": "JUMPI"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "514": {
      "op": "DUP1"
    },
    "515": {
      "op": "REVERT"
    },
    "516": {
      "op": "JUMPDEST"
    },
    "517": {
      "op": "POP"
    },
    "518": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "op": "SUB"
    },
    "527": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "528": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x52b"
    },
    "531": {
      "fn": "MockDai.balanceOf",
      "jump": "i",
      "offset": [
        994,
        1099
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "532": {
      "offset": [
        108,
        128
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "533": {
      "offset": [
        108,
        128
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "534": {
      "op": "DUP1"
    },
    "535": {
      "op": "ISZERO"
    },
    "536": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "539": {
      "op": "JUMPI"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "542": {
      "op": "DUP1"
    },
    "543": {
      "op": "REVERT"
    },
    "544": {
      "op": "JUMPDEST"
    },
    "545": {
      "offset": [
        108,
        128
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "546": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0xa0"
    },
    "549": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x546"
    },
    "552": {
      "jump": "i",
      "offset": [
        108,
        128
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "553": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "554": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "555": {
      "op": "DUP1"
    },
    "556": {
      "op": "ISZERO"
    },
    "557": {
      "op": "PUSH2",
      "value": "0x235"
    },
    "560": {
      "op": "JUMPI"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "563": {
      "op": "DUP1"
    },
    "564": {
      "op": "REVERT"
    },
    "565": {
      "op": "JUMPDEST"
    },
    "566": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "567": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x14e"
    },
    "570": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "572": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "573": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "574": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "577": {
      "op": "DUP2"
    },
    "578": {
      "op": "LT"
    },
    "579": {
      "op": "ISZERO"
    },
    "580": {
      "op": "PUSH2",
      "value": "0x24c"
    },
    "583": {
      "op": "JUMPI"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "586": {
      "op": "DUP1"
    },
    "587": {
      "op": "REVERT"
    },
    "588": {
      "op": "JUMPDEST"
    },
    "589": {
      "op": "POP"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "596": {
      "op": "SHL"
    },
    "597": {
      "op": "SUB"
    },
    "598": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "599": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "600": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "601": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "602": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "604": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "605": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "606": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x5a1"
    },
    "609": {
      "fn": "MockDai.transfer",
      "jump": "i",
      "offset": [
        1501,
        1762
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "610": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "611": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "CALLVALUE",
      "path": "contracts/MockDai.sol"
    },
    "612": {
      "op": "DUP1"
    },
    "613": {
      "op": "ISZERO"
    },
    "614": {
      "op": "PUSH2",
      "value": "0x26e"
    },
    "617": {
      "op": "JUMPI"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "620": {
      "op": "DUP1"
    },
    "621": {
      "op": "REVERT"
    },
    "622": {
      "op": "JUMPDEST"
    },
    "623": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "624": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x177"
    },
    "627": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "629": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "630": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/MockDai.sol"
    },
    "631": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "634": {
      "op": "DUP2"
    },
    "635": {
      "op": "LT"
    },
    "636": {
      "op": "ISZERO"
    },
    "637": {
      "op": "PUSH2",
      "value": "0x285"
    },
    "640": {
      "op": "JUMPI"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "643": {
      "op": "DUP1"
    },
    "644": {
      "op": "REVERT"
    },
    "645": {
      "op": "JUMPDEST"
    },
    "646": {
      "op": "POP"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "651": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "653": {
      "op": "SHL"
    },
    "654": {
      "op": "SUB"
    },
    "655": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "656": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "657": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "658": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "659": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "660": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "662": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "663": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/MockDai.sol"
    },
    "664": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "665": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x659"
    },
    "668": {
      "fn": "MockDai.allowance",
      "jump": "i",
      "offset": [
        1105,
        1287
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "669": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "670": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1"
    },
    "672": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "673": {
      "offset": [
        134,
        152
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "674": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "676": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "677": {
      "offset": [
        134,
        152
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "678": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "680": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x2"
    },
    "682": {
      "offset": [
        134,
        152
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "683": {
      "offset": [
        134,
        152
      ],
      "op": "DUP7",
      "path": "contracts/MockDai.sol"
    },
    "684": {
      "offset": [
        134,
        152
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "685": {
      "offset": [
        134,
        152
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "686": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x100"
    },
    "689": {
      "offset": [
        134,
        152
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "692": {
      "op": "NOT"
    },
    "693": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "694": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "695": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "696": {
      "offset": [
        134,
        152
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "697": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "698": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "699": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "700": {
      "offset": [
        134,
        152
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "701": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "703": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "704": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "705": {
      "offset": [
        134,
        152
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "706": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "707": {
      "offset": [
        134,
        152
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "708": {
      "offset": [
        134,
        152
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "709": {
      "offset": [
        134,
        152
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "710": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "711": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "712": {
      "offset": [
        134,
        152
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "713": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "714": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "715": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "716": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "717": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "718": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "719": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "720": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "721": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "722": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "723": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "724": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "725": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "726": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "727": {
      "offset": [
        134,
        152
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "728": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x322"
    },
    "731": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "732": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "733": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "735": {
      "offset": [
        134,
        152
      ],
      "op": "LT",
      "path": "contracts/MockDai.sol"
    },
    "736": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x2f7"
    },
    "739": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "740": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x100"
    },
    "743": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "744": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "745": {
      "offset": [
        134,
        152
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "746": {
      "offset": [
        134,
        152
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "747": {
      "offset": [
        134,
        152
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "748": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "749": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "750": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "751": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "753": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "754": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "755": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x322"
    },
    "758": {
      "offset": [
        134,
        152
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "759": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "760": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "761": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "762": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "763": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "764": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "766": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "767": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "769": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "771": {
      "offset": [
        134,
        152
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "772": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "773": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "774": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "775": {
      "offset": [
        134,
        152
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "776": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "777": {
      "offset": [
        134,
        152
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "778": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "779": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1"
    },
    "781": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "782": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "783": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "785": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "786": {
      "offset": [
        134,
        152
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "787": {
      "offset": [
        134,
        152
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "788": {
      "offset": [
        134,
        152
      ],
      "op": "GT",
      "path": "contracts/MockDai.sol"
    },
    "789": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x305"
    },
    "792": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "793": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "794": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "795": {
      "offset": [
        134,
        152
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "796": {
      "offset": [
        134,
        152
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "798": {
      "offset": [
        134,
        152
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "799": {
      "offset": [
        134,
        152
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "800": {
      "offset": [
        134,
        152
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "801": {
      "offset": [
        134,
        152
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "802": {
      "offset": [
        134,
        152
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "803": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "804": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "805": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "806": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "807": {
      "offset": [
        134,
        152
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "808": {
      "offset": [
        134,
        152
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "809": {
      "jump": "o",
      "offset": [
        134,
        152
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "810": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "811": {
      "fn": "MockDai.approve",
      "offset": [
        1384,
        1394
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol",
      "statement": 1
    },
    "812": {
      "fn": "MockDai.approve",
      "offset": [
        1360,
        1364
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "814": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "815": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "816": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "817": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1383
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x5"
    },
    "819": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "821": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "822": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "823": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "824": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "826": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "827": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "828": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1395
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "835": {
      "op": "SHL"
    },
    "836": {
      "op": "SUB"
    },
    "837": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "DUP8",
      "path": "contracts/MockDai.sol"
    },
    "838": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "839": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "840": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "841": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "842": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "843": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "844": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "845": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "846": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "847": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1405
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "848": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1414
      ],
      "op": "DUP7",
      "path": "contracts/MockDai.sol"
    },
    "849": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1414
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "850": {
      "fn": "MockDai.approve",
      "offset": [
        1376,
        1414
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "851": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol",
      "statement": 2
    },
    "852": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "853": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "854": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "855": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "856": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "857": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "858": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "859": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "860": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "861": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "862": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "863": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "864": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "865": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "866": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "867": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "868": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "869": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "870": {
      "fn": "MockDai.approve",
      "offset": [
        1360,
        1364
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "871": {
      "fn": "MockDai.approve",
      "offset": [
        1360,
        1364
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "872": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "PUSH32",
      "path": "contracts/MockDai.sol",
      "value": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    "905": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "906": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "907": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "908": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "909": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "910": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x60"
    },
    "912": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "913": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "914": {
      "fn": "MockDai.approve",
      "offset": [
        1429,
        1467
      ],
      "op": "LOG1",
      "path": "contracts/MockDai.sol"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "fn": "MockDai.approve",
      "offset": [
        1484,
        1488
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "statement": 3,
      "value": "0x1"
    },
    "918": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "919": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "920": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "921": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "922": {
      "fn": "MockDai.approve",
      "offset": [
        1293,
        1495
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "923": {
      "fn": "MockDai.approve",
      "jump": "o",
      "offset": [
        1293,
        1495
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "924": {
      "offset": [
        187,
        213
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "925": {
      "offset": [
        187,
        213
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x3"
    },
    "927": {
      "offset": [
        187,
        213
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "928": {
      "offset": [
        187,
        213
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "929": {
      "jump": "o",
      "offset": [
        187,
        213
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "930": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "op": "SUB"
    },
    "939": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol",
      "statement": 4
    },
    "940": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "941": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1896,
        1900
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "943": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "944": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "945": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "946": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1931
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x5"
    },
    "948": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "950": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "951": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "952": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "953": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "955": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "956": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "957": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1938
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "958": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1939,
        1949
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol"
    },
    "959": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1950
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "960": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1950
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "961": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1950
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "962": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1950
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "963": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1950
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "964": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1950
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "965": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1950
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "966": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1950
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "967": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1960
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "968": {
      "op": "GT"
    },
    "969": {
      "branch": 20,
      "fn": "MockDai.transferFrom",
      "offset": [
        1924,
        1960
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "970": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x413"
    },
    "973": {
      "branch": 20,
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "974": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "976": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "977": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "978": {
      "op": "PUSH3",
      "value": "0x461bcd"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xe5"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "986": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "987": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "989": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "991": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "992": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "993": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "994": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x16"
    },
    "996": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x24"
    },
    "998": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "999": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1000": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1001": {
      "op": "PUSH22",
      "value": "0x496e73756666696369656e7420616c6c6f77616e6365"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1026": {
      "op": "SHL"
    },
    "1027": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x44"
    },
    "1029": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1030": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1031": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1032": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1033": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1034": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1035": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1036": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1037": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "1038": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x64"
    },
    "1040": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1041": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1042": {
      "dev": "",
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "REVERT",
      "path": "contracts/MockDai.sol"
    },
    "1043": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1916,
        1987
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "op": "SUB"
    },
    "1052": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol",
      "statement": 5
    },
    "1053": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1054": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1056": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1057": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1058": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1059": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2023
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1061": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1063": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1064": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1066": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1067": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1068": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2030
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1069": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2042
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x43c"
    },
    "1072": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2042
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1073": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2035,
        2041
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1074": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2042
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xffffffff"
    },
    "1079": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2034
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x684"
    },
    "1082": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2042
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1083": {
      "fn": "MockDai.transferFrom",
      "jump": "i",
      "offset": [
        2015,
        2042
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1084": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2015,
        2042
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "SUB"
    },
    "1093": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "1094": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1095": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1097": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1098": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1099": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1100": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2005
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1102": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1104": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1105": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1106": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1107": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1109": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1110": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1111": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2012
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1112": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2042
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1113": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2042
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1114": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2042
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1115": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1997,
        2042
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1116": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2088
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "statement": 6,
      "value": "0x5"
    },
    "1118": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2095
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1119": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2095
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1120": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2095
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1121": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2095
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1122": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2095
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1123": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2096,
        2106
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol"
    },
    "1124": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2107
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1125": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2107
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1126": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2107
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1127": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2107
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1128": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2107
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1129": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2107
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1130": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2119
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x479"
    },
    "1133": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2119
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1134": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2112,
        2118
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1135": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2119
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xffffffff"
    },
    "1140": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2111
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x684"
    },
    "1143": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2119
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1144": {
      "fn": "MockDai.transferFrom",
      "jump": "i",
      "offset": [
        2081,
        2119
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1145": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2081,
        2119
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1155": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "DUP7",
      "path": "contracts/MockDai.sol"
    },
    "1156": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1157": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1159": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1160": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1161": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1162": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2059
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x5"
    },
    "1164": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1166": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1167": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1168": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1169": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1171": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1172": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1173": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2066
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1174": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2067,
        2077
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol"
    },
    "1175": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2078
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1176": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2078
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1177": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2078
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1178": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2078
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1179": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2078
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1180": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2078
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1181": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2078
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1182": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2119
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1183": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2119
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1184": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2119
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1185": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2052,
        2119
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1186": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2158
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol",
      "statement": 7
    },
    "1187": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2158
      ],
      "op": "DUP7",
      "path": "contracts/MockDai.sol"
    },
    "1188": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2158
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1189": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2158
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1190": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2158
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1191": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2153
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1193": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2158
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1194": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2158
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1195": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2158
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1196": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2158
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1197": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2158
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1198": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2170
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x4bd"
    },
    "1201": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2170
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1202": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2163,
        2169
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1203": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2170
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xffffffff"
    },
    "1208": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2162
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x6cd"
    },
    "1211": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2170
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1212": {
      "fn": "MockDai.transferFrom",
      "jump": "i",
      "offset": [
        2145,
        2170
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1213": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2145,
        2170
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "SUB"
    },
    "1222": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1223": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "1224": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1225": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1227": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1228": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1229": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1230": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2137
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1232": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1234": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1235": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1236": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1237": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1239": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1240": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1241": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1242": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2142
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1243": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2170
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1244": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2170
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1245": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2170
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1246": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2129,
        2170
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1247": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol",
      "statement": 8
    },
    "1248": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1249": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1250": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "DUP9",
      "path": "contracts/MockDai.sol"
    },
    "1251": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1252": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1253": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1254": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1255": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1256": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1257": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1258": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1259": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1260": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1261": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1262": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1263": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1264": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1265": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1266": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "PUSH32",
      "path": "contracts/MockDai.sol",
      "value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    "1299": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1300": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1301": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1302": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "1303": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x60"
    },
    "1305": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1306": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1307": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2185,
        2213
      ],
      "op": "LOG1",
      "path": "contracts/MockDai.sol"
    },
    "1308": {
      "op": "POP"
    },
    "1309": {
      "fn": "MockDai.transferFrom",
      "offset": [
        2230,
        2234
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "statement": 9,
      "value": "0x1"
    },
    "1311": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1312": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1313": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "1314": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "1315": {
      "fn": "MockDai.transferFrom",
      "offset": [
        1768,
        2241
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "1316": {
      "fn": "MockDai.transferFrom",
      "jump": "o",
      "offset": [
        1768,
        2241
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1317": {
      "offset": [
        158,
        181
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1318": {
      "offset": [
        158,
        181
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x2"
    },
    "1320": {
      "offset": [
        158,
        181
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1321": {
      "offset": [
        158,
        181
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1322": {
      "jump": "o",
      "offset": [
        158,
        181
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1323": {
      "fn": "MockDai.balanceOf",
      "offset": [
        994,
        1099
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1330": {
      "op": "SHL"
    },
    "1331": {
      "op": "SUB"
    },
    "1332": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol",
      "statement": 10
    },
    "1333": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1050,
        1057
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1335": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1336": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1337": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1338": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1084
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1340": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1342": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1343": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1345": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1346": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1347": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1348": {
      "fn": "MockDai.balanceOf",
      "offset": [
        1076,
        1092
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1349": {
      "fn": "MockDai.balanceOf",
      "jump": "o",
      "offset": [
        994,
        1099
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1350": {
      "offset": [
        108,
        128
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1351": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1353": {
      "offset": [
        108,
        128
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1354": {
      "offset": [
        108,
        128
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1355": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1357": {
      "offset": [
        108,
        128
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1358": {
      "offset": [
        108,
        128
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1359": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1361": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x2"
    },
    "1363": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1"
    },
    "1365": {
      "offset": [
        108,
        128
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol"
    },
    "1366": {
      "offset": [
        108,
        128
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1367": {
      "offset": [
        108,
        128
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "1368": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x100"
    },
    "1371": {
      "offset": [
        108,
        128
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1374": {
      "op": "NOT"
    },
    "1375": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1376": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1377": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1378": {
      "offset": [
        108,
        128
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1379": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1380": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1381": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1382": {
      "offset": [
        108,
        128
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "1383": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "1385": {
      "offset": [
        108,
        128
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1386": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1387": {
      "offset": [
        108,
        128
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1388": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1389": {
      "offset": [
        108,
        128
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "1390": {
      "offset": [
        108,
        128
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1391": {
      "offset": [
        108,
        128
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "1392": {
      "offset": [
        108,
        128
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1393": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1394": {
      "offset": [
        108,
        128
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1395": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1396": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1397": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1398": {
      "offset": [
        108,
        128
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1399": {
      "offset": [
        108,
        128
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1400": {
      "offset": [
        108,
        128
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1401": {
      "offset": [
        108,
        128
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1402": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1403": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1404": {
      "offset": [
        108,
        128
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1405": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1406": {
      "offset": [
        108,
        128
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1407": {
      "offset": [
        108,
        128
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1408": {
      "offset": [
        108,
        128
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1409": {
      "offset": [
        108,
        128
      ],
      "op": "ISZERO",
      "path": "contracts/MockDai.sol"
    },
    "1410": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x322"
    },
    "1413": {
      "offset": [
        108,
        128
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "1414": {
      "offset": [
        108,
        128
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1415": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x1f"
    },
    "1417": {
      "offset": [
        108,
        128
      ],
      "op": "LT",
      "path": "contracts/MockDai.sol"
    },
    "1418": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x2f7"
    },
    "1421": {
      "offset": [
        108,
        128
      ],
      "op": "JUMPI",
      "path": "contracts/MockDai.sol"
    },
    "1422": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x100"
    },
    "1425": {
      "offset": [
        108,
        128
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1426": {
      "offset": [
        108,
        128
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1427": {
      "offset": [
        108,
        128
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1428": {
      "offset": [
        108,
        128
      ],
      "op": "DIV",
      "path": "contracts/MockDai.sol"
    },
    "1429": {
      "offset": [
        108,
        128
      ],
      "op": "MUL",
      "path": "contracts/MockDai.sol"
    },
    "1430": {
      "offset": [
        108,
        128
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1431": {
      "offset": [
        108,
        128
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1432": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1433": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1435": {
      "offset": [
        108,
        128
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1436": {
      "offset": [
        108,
        128
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1437": {
      "offset": [
        108,
        128
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x322"
    },
    "1440": {
      "offset": [
        108,
        128
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1441": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1442": {
      "fn": "MockDai.transfer",
      "offset": [
        1612,
        1622
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol",
      "statement": 11
    },
    "1443": {
      "fn": "MockDai.transfer",
      "offset": [
        1564,
        1568
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1445": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1623
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1446": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1623
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1447": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1623
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1448": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1611
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1450": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1623
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1452": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1623
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1453": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1623
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1455": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1623
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1456": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1623
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1457": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1623
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1458": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1635
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x5c1"
    },
    "1461": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1635
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1462": {
      "fn": "MockDai.transfer",
      "offset": [
        1628,
        1634
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1463": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1635
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xffffffff"
    },
    "1468": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1627
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x684"
    },
    "1471": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1635
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1472": {
      "fn": "MockDai.transfer",
      "jump": "i",
      "offset": [
        1603,
        1635
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1473": {
      "fn": "MockDai.transfer",
      "offset": [
        1603,
        1635
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1474": {
      "fn": "MockDai.transfer",
      "offset": [
        1589,
        1599
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol"
    },
    "1475": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1600
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1477": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1600
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1478": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1600
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1479": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1600
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1480": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1588
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1482": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1600
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1484": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1600
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1485": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1600
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1487": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1600
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1488": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1600
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1489": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1600
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1490": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1635
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1491": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1635
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1492": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1635
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1493": {
      "fn": "MockDai.transfer",
      "offset": [
        1580,
        1635
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "SUB"
    },
    "1502": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1674
      ],
      "op": "DUP6",
      "path": "contracts/MockDai.sol",
      "statement": 12
    },
    "1503": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1674
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1504": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1674
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1505": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1674
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1506": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1674
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1507": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1674
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1508": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1686
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x5f3"
    },
    "1511": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1686
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1512": {
      "fn": "MockDai.transfer",
      "offset": [
        1679,
        1685
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1513": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1686
      ],
      "op": "PUSH4",
      "path": "contracts/MockDai.sol",
      "value": "0xffffffff"
    },
    "1518": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1678
      ],
      "op": "PUSH2",
      "path": "contracts/MockDai.sol",
      "value": "0x6cd"
    },
    "1521": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1686
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1522": {
      "fn": "MockDai.transfer",
      "jump": "i",
      "offset": [
        1661,
        1686
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1523": {
      "fn": "MockDai.transfer",
      "offset": [
        1661,
        1686
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1530": {
      "op": "SHL"
    },
    "1531": {
      "op": "SUB"
    },
    "1532": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1533": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1534": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1536": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1537": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1538": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1539": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1653
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x4"
    },
    "1541": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1543": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1544": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1545": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1546": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1548": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1549": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1550": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1551": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1658
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1552": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1686
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1553": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1686
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1554": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1686
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1555": {
      "fn": "MockDai.transfer",
      "offset": [
        1645,
        1686
      ],
      "op": "SSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1556": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol",
      "statement": 13
    },
    "1557": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1558": {
      "fn": "MockDai.transfer",
      "offset": [
        1710,
        1720
      ],
      "op": "CALLER",
      "path": "contracts/MockDai.sol"
    },
    "1559": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1560": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1561": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1562": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1563": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1564": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1565": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1566": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1567": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1568": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1569": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1570": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1571": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "DUP5",
      "path": "contracts/MockDai.sol"
    },
    "1572": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1573": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1574": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "MLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1575": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "PUSH32",
      "path": "contracts/MockDai.sol",
      "value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    "1608": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1609": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1610": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1611": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "SUB",
      "path": "contracts/MockDai.sol"
    },
    "1612": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x60"
    },
    "1614": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "ADD",
      "path": "contracts/MockDai.sol"
    },
    "1615": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1616": {
      "fn": "MockDai.transfer",
      "offset": [
        1701,
        1734
      ],
      "op": "LOG1",
      "path": "contracts/MockDai.sol"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "fn": "MockDai.transfer",
      "offset": [
        1751,
        1755
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "statement": 14,
      "value": "0x1"
    },
    "1620": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "SWAP3",
      "path": "contracts/MockDai.sol"
    },
    "1621": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1622": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "1623": {
      "fn": "MockDai.transfer",
      "offset": [
        1501,
        1762
      ],
      "op": "POP",
      "path": "contracts/MockDai.sol"
    },
    "1624": {
      "fn": "MockDai.transfer",
      "jump": "o",
      "offset": [
        1501,
        1762
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1625": {
      "fn": "MockDai.allowance",
      "offset": [
        1105,
        1287
      ],
      "op": "JUMPDEST",
      "path": "contracts/MockDai.sol"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0xa0"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "op": "SUB"
    },
    "1634": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol",
      "statement": 15
    },
    "1635": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1636": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1637": {
      "fn": "MockDai.allowance",
      "offset": [
        1225,
        1232
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x0"
    },
    "1639": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1640": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1641": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1642": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1262
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x5"
    },
    "1644": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x20"
    },
    "1646": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1647": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "DUP2",
      "path": "contracts/MockDai.sol"
    },
    "1648": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1649": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "PUSH1",
      "path": "contracts/MockDai.sol",
      "value": "0x40"
    },
    "1651": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "DUP1",
      "path": "contracts/MockDai.sol"
    },
    "1652": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "DUP4",
      "path": "contracts/MockDai.sol"
    },
    "1653": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1270
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1654": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "SWAP4",
      "path": "contracts/MockDai.sol"
    },
    "1655": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1656": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "SWAP5",
      "path": "contracts/MockDai.sol"
    },
    "1657": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "AND",
      "path": "contracts/MockDai.sol"
    },
    "1658": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "DUP3",
      "path": "contracts/MockDai.sol"
    },
    "1659": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1660": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1661": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1662": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "SWAP2",
      "path": "contracts/MockDai.sol"
    },
    "1663": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "MSTORE",
      "path": "contracts/MockDai.sol"
    },
    "1664": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "KECCAK256",
      "path": "contracts/MockDai.sol"
    },
    "1665": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "SLOAD",
      "path": "contracts/MockDai.sol"
    },
    "1666": {
      "fn": "MockDai.allowance",
      "offset": [
        1255,
        1280
      ],
      "op": "SWAP1",
      "path": "contracts/MockDai.sol"
    },
    "1667": {
      "fn": "MockDai.allowance",
      "jump": "o",
      "offset": [
        1105,
        1287
      ],
      "op": "JUMP",
      "path": "contracts/MockDai.sol"
    },
    "1668": {
      "fn": "SafeMath.sub",
      "offset": [
        176,
        300
      ],
      "op": "JUMPDEST",
      "path": "contracts/SafeMath.sol"
    },
    "1669": {
      "fn": "SafeMath.sub",
      "offset": [
        228,
        234
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x0"
    },
    "1671": {
      "fn": "SafeMath.sub",
      "offset": [
        259,
        260
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol",
      "statement": 16
    },
    "1672": {
      "fn": "SafeMath.sub",
      "offset": [
        254,
        255
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1673": {
      "fn": "SafeMath.sub",
      "offset": [
        254,
        260
      ],
      "op": "GT",
      "path": "contracts/SafeMath.sol"
    },
    "1674": {
      "branch": 21,
      "fn": "SafeMath.sub",
      "offset": [
        254,
        260
      ],
      "op": "ISZERO",
      "path": "contracts/SafeMath.sol"
    },
    "1675": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH2",
      "path": "contracts/SafeMath.sol",
      "value": "0x6c7"
    },
    "1678": {
      "branch": 21,
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "JUMPI",
      "path": "contracts/SafeMath.sol"
    },
    "1679": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x40"
    },
    "1681": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP1",
      "path": "contracts/SafeMath.sol"
    },
    "1682": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MLOAD",
      "path": "contracts/SafeMath.sol"
    },
    "1683": {
      "op": "PUSH3",
      "value": "0x461bcd"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xe5"
    },
    "1689": {
      "op": "SHL"
    },
    "1690": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1691": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1692": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x20"
    },
    "1694": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x4"
    },
    "1696": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1697": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1698": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1699": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x9"
    },
    "1701": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x24"
    },
    "1703": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1704": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1705": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1706": {
      "op": "PUSH9",
      "value": "0x556e646572666c6f77"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0xb8"
    },
    "1718": {
      "op": "SHL"
    },
    "1719": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x44"
    },
    "1721": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1722": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1723": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1724": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1725": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "MLOAD",
      "path": "contracts/SafeMath.sol"
    },
    "1726": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1727": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1728": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1729": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "SUB",
      "path": "contracts/SafeMath.sol"
    },
    "1730": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x64"
    },
    "1732": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1733": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1734": {
      "dev": "",
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "REVERT",
      "path": "contracts/SafeMath.sol"
    },
    "1735": {
      "fn": "SafeMath.sub",
      "offset": [
        246,
        274
      ],
      "op": "JUMPDEST",
      "path": "contracts/SafeMath.sol"
    },
    "1736": {
      "op": "POP"
    },
    "1737": {
      "fn": "SafeMath.sub",
      "offset": [
        288,
        293
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol",
      "statement": 17
    },
    "1738": {
      "fn": "SafeMath.sub",
      "offset": [
        288,
        293
      ],
      "op": "SUB",
      "path": "contracts/SafeMath.sol"
    },
    "1739": {
      "fn": "SafeMath.sub",
      "offset": [
        288,
        293
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1740": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        176,
        300
      ],
      "op": "JUMP",
      "path": "contracts/SafeMath.sol"
    },
    "1741": {
      "fn": "SafeMath.add",
      "offset": [
        48,
        171
      ],
      "op": "JUMPDEST",
      "path": "contracts/SafeMath.sol"
    },
    "1742": {
      "fn": "SafeMath.add",
      "offset": [
        122,
        127
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol",
      "statement": 18
    },
    "1743": {
      "fn": "SafeMath.add",
      "offset": [
        122,
        127
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1744": {
      "fn": "SafeMath.add",
      "offset": [
        122,
        127
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1745": {
      "fn": "SafeMath.add",
      "offset": [
        145,
        151
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol",
      "statement": 19
    },
    "1746": {
      "fn": "SafeMath.add",
      "offset": [
        145,
        151
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1747": {
      "fn": "SafeMath.add",
      "offset": [
        145,
        151
      ],
      "op": "LT",
      "path": "contracts/SafeMath.sol"
    },
    "1748": {
      "branch": 22,
      "fn": "SafeMath.add",
      "offset": [
        145,
        151
      ],
      "op": "ISZERO",
      "path": "contracts/SafeMath.sol"
    },
    "1749": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH2",
      "path": "contracts/SafeMath.sol",
      "value": "0x396"
    },
    "1752": {
      "branch": 22,
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "JUMPI",
      "path": "contracts/SafeMath.sol"
    },
    "1753": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x40"
    },
    "1755": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP1",
      "path": "contracts/SafeMath.sol"
    },
    "1756": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MLOAD",
      "path": "contracts/SafeMath.sol"
    },
    "1757": {
      "op": "PUSH3",
      "value": "0x461bcd"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0xe5"
    },
    "1763": {
      "op": "SHL"
    },
    "1764": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1765": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1766": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x20"
    },
    "1768": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x4"
    },
    "1770": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1771": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1772": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1773": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x8"
    },
    "1775": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x24"
    },
    "1777": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1778": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1779": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1780": {
      "op": "PUSH8",
      "value": "0x4f766572666c6f77"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xc0"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x44"
    },
    "1794": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP3",
      "path": "contracts/SafeMath.sol"
    },
    "1795": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1796": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MSTORE",
      "path": "contracts/SafeMath.sol"
    },
    "1797": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1798": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "MLOAD",
      "path": "contracts/SafeMath.sol"
    },
    "1799": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1800": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "DUP2",
      "path": "contracts/SafeMath.sol"
    },
    "1801": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1802": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "SUB",
      "path": "contracts/SafeMath.sol"
    },
    "1803": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "PUSH1",
      "path": "contracts/SafeMath.sol",
      "value": "0x64"
    },
    "1805": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "ADD",
      "path": "contracts/SafeMath.sol"
    },
    "1806": {
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "SWAP1",
      "path": "contracts/SafeMath.sol"
    },
    "1807": {
      "dev": "",
      "fn": "SafeMath.add",
      "offset": [
        137,
        164
      ],
      "op": "REVERT",
      "path": "contracts/SafeMath.sol"
    }
  },
  "sha1": "e2920d70c977bb981ba5bb55b08a126f414f75b2",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./SafeMath.sol\";\n\ncontract MockDai {\n\n    using SafeMath for uint256;\n\n    string public symbol;\n    string public name;\n    uint256 public decimals;\n    uint256 public totalSupply;\n\n    mapping(address => uint256) balances;\n    mapping(address => mapping(address => uint256)) allowed;\n\n    event Transfer(address from, address to, uint256 value);\n    event Approval(address owner, address spender, uint256 value);\n    event Mint(address minter, uint256 value);\n    event Burn(address burner, uint256 value);\n\n    constructor(\n        string memory _symbol,\n        string memory _name,\n        uint256 _decimals,\n        uint256 _totalSupply\n    )\n        public\n    {\n        symbol = _symbol;\n        name = _name;\n        decimals = _decimals;\n        totalSupply = _totalSupply;\n        balances[msg.sender] = _totalSupply;\n        emit Transfer(address(0), msg.sender, _totalSupply);\n    }\n\n    function () external payable {\n        revert();\n    }\n\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n\n    function allowance(\n        address _owner,\n        address _spender\n    )\n        public\n        view\n        returns (uint256)\n    {\n        return allowed[_owner][_spender];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    )\n        public\n        returns (bool)\n    {\n        require(allowed[_from][msg.sender] >= _value, \"Insufficient allowance\");\n        balances[_from] = balances[_from].sub(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n}\n",
  "sourceMap": "51:2193:1:-;;;547:381;8:9:-1;5:2;;;30:1;27;20:12;5:2;547:381:1;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;547:381:1;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;547:381:1;;420:4:-1;411:14;;;;547:381:1;;;;;411:14:-1;547:381:1;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;547:381:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;547:381:1;;420:4:-1;411:14;;;;547:381:1;;;;;411:14:-1;547:381:1;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;547:381:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;547:381:1;;;;;;;;;;;;;;711:16;;547:381;;-1:-1:-1;547:381:1;-1:-1:-1;711:16:1;;:6;;:16;;;;:::i;:::-;-1:-1:-1;737:12:1;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;759:8:1;:20;;;789:11;:26;;;834:10;-1:-1:-1;825:20:1;;;:8;:20;;;;;;;;:35;;;875:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;547:381;;;;51:2193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;51:2193:1;;;-1:-1:-1;51:2193:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/MockDai.sol",
  "type": "contract"
}